{
    "contents" : "###############################################################################\n# AUTHOR(DATE):       Agurtzane Urtizberea, Dorleta Garcia\n# RESEARCH INSTITUTE: AZTI-TECNALIA                      \n# TITLE:        Test Case: Myfish\n# NOTE #1:     \n# NOTE #2:      Create FLBEIA input objects and run FLBEIA\n###############################################################################\n\n#-------------------------------------------------------------------------------\n#   Section 1:       Charge libraries\n#   Section 2:       Set directory\n#   Section 3:       Load the data\n#   Section 4:       Set Simulation-time parameters\n#                          first.yr      <- first year of historic data\n#                          proj.yr       <- first year of projection\n#                          last.yr       <- last year of projection\n#   Section 5:       Set names, age, dimensions \n#                          fls           <- fleets' names                                    #vector\n#                          stks          <- stocks' names                                    #vector\n#                          fl1.mets      <- metiers' names in fleet 'fl1'                    #vector\n#                          fl1.met1.stks <- stocks' names in metier 'met1' and fleet 'fl1'   #vector\n#                       all stocks:\n#                           ni           <- number of iterations\n#                           ns           <- number of seasons\n#                       stock 'stk1':\n#                           stk1.age.min  <- minimum age \n#                           stk1.age.max  <- maximum age\n#                           stk1.unit     <- number units\n#                       stock 'stk2':\n#   Section 6:       biological data\n#                       Historical data:\n#                         Stock 'stk1':                           \n#                           stk1_n.flq     <- Abundance at age     #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                           stk1_m.flq     <- Natural mortality    #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                           stk1_spwn.flq  <- Spawning             #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                           stk1_fec.flq   <- Fecundity            #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                           stk1_wt.flq    <- Weight               #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                           stk1_range.min       <- minimum age\n#                           stk1_range.max       <- maximum age\n#                           stk1_range.plusgroup <- plusgroup\n#                           stk1_range.minyear   <- minimum year\n#                           stk1_range.minfbar   <- minimum age to take into account in the age 'f' calculation\n#                           stk1_range.maxfbar   <- maximum age to take into account in the age 'f' calculation\n#                         stock 'stk2': \n#                       Projection parameters: in some variables, the projection is assumed the average of some historical years\n#                         stock 'stk1': \n#                           stk1_biol.proj.avg.yrs <- a vector with the years to calculate the average\n#                         stock 'stk2': \n#   Section 7:          Historical data per fleet:\n#                         Fleet 'fl1' \n#                           fl1.effort.flq        <- Effort          #FLQuant[1,ny(hist),1,ns,1/ni]\n#                           fl1.capacity.flq      <- Capacity        #FLQuant[1,ny(hist),1,ns,1/ni](not required)\n#                         Historical data per fleet and metier:\n#                           Fleet 'fl1' and metier 'met1' \n#                             fl1.met1.effshare.flq <-Effort share                  #FLQuant[1,ny(hist),1,ns,1/ni]\n#                             fl1.met1.vcost.flq    <- Variable cost                #FLQuant[1,ny(hist),1,ns,1/ni](not required)\n#                           Historical data per fleet,metier and stock:\n#                             Fleet 'fl1', metier 'met1' and stock 'stk1':\n#                               fl1.met1.stk1_landings.n.flq    <- Landings at age of the stock      #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                               fl1.met1.stk1_discards.n.flq    <- Discards at age of the stock      #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni]\n#                               fl1.met1.stk1_price.flq         <- Price of the stock                #FLQuant[na,ny(hist),1/nu(stock),ns,1/ni] (not required)\n#                               fl1.met1.stk1_alpha.flq     <- alpha Cobb-Douglas parameter values   #FLQuant[na,ny,1/nu(stock),ns,1/ni] (not required)\n#                               fl1.met1.stk1_beta.flq      <- beta Cobb-Douglas parameter values    #FLQuant[na,ny,1/nu(stock),ns,1/ni] (not required)\n#                               fl1.met1.stk1_catch.q.flq   <- catch.q Cobb-Douglas parameter values #FLQuant[na,ny,1/nu(stock),ns,1/ni] (not required)\n#                       Projection parameters: in some variables, the projection is assumed the average of some historical years\n#                         fleet 'fl1'\n#                           fl1_proj.avg.yrs           <-  a vector with the years to calculate the average,            \n#                                                          of the next variables; effort, capacity,crewshare      \n#                           fleet 'fl1' and metier 'met1':\n#                           fl1.met1_proj.avg.yrs      <- a vector with the years to calculate the average,   \n#                                                          of the next variables: vcost, effshare                       \n#                           fl1.met1.stk1_proj.avg.yrs <- a vector with the years to calculate the average,\n#                                                         of the next variables; price,landings.sel,discards.sel,\n#                                                         landings.wt, discards.wt,alpha,beta,catch.q\n#                         fleet 'fl2'\n#  Section 8:       SRs\n#                      stk1_sr.model        <- name of the SR model\n#                      stk1_param.n         <- number of parameters in the SR model\n#                      stk1_params.array    <- Parameters of the model      # array[param.n, ny, ns, ni]   \n#                      stk1_params.name     <- Parameters' names\n#                      stk1_rec.flq         <- Recruitment                  #FLQuant[1,ny(hist),1/nu(stock),ns,1/ni]\n#                      stk1_ssb.flq         <- ssb                          #FLQuant[1,ny(hist),1/nu(stock),ns,1/ni]\n#                      stk1_uncertainty.flq <- uncertainty of the model     #FLQuant[na,ny,1/nu(stock),ns,1/ni] (not required)\n#                      stk1_proportion.flq  <- proportion of the model      #FLQuant[na,ny,1/nu(stock),ns,1/ni]\n#                      stk1_prop.avg.yrs    <- a vector with the years to calculate the average of proportion\n#                      stk1_timelag.matrix  <- timelag of year and season of spawning  #matrix(c(0,1),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n#  Section 9:       BDs\n#                      stk2_bd.model        <- Biomass dynamic model\n#                      stk2_param.n         <- Number of parameters in the model\n#                      stk2_params.array    <- Parameters of the model          # array[param.n, ny, ns, ni]   \n#                      stk2_params.name     <- Parameters' names\n#                      stk2_biomass.flq     <- Biomass                          #FLQuant[1,ny(hist),1/nu(stock),ns,1/ni]\n#                      stk2_catch.flq       <- Catch                            #FLQuant[1,ny(hist),1/nu(stock),ns,1/ni]\n#                      stk2_uncertainty.flq <- Uncertainty of the model         #FLQuant[1,ny,1/nu(stock),ns,1/ni]   (not required)\n#  Section 10:       advice:TAC/TAE/quota.share                                 \n#                      stk1_advice.TAC.flq  <- TAC                #FLQuant[1,ny,1,1,1/ni]\n#                      Projection:\n#                      stk1_advice.avg.yrs  <-a vector with the years to calculate the average of (TAC/quota.share, if they are not defined)\n#  Section 11:       main.ctrl\n#                      main.ctrl           <- it's a list\n#                      main.ctrl$sim.years <- a vector with the 'initial' and 'final' simulation year\n#  Section 12:       biols.ctrl\n#                      growth.model     <- growth model \n#                      biols.ctrl       <- biols.ctrl object\n#  Section 13:       fleets.ctrl\n#                      n.flts.stks      <- number of stks per fleet\n#                      flts.stksnames   <- stocks' names in each fleet\n#                      effort.models    <- effort model per fleet\n#                      effort.restr.fl2 <- stock restricting the effort in fl2 fleet \n#                      restriction.fl2  <- restricting the effort in fl2 fleet options: 'catch',...\n#                      catch.models     <- catch  model per fleet\n#                      capital.models   <- capital model per fleet\n#                      price.models     <- elastic price  \n#                      flq     <- FLQuant with the dimenstions of the stock. Required by fleets.ctrl                 \n#                      fleets.ctrl      <- fleets ctrl object  \n#  Section 14:       advice.ctrl\n#                      HCR.models       <- HCR model per stock \n#                      Ftarget.stk2     <- 'stk2' stock's f target\n#                      ref.pts.stk1     <- 'stk1' stock's reference points\n#                      advice.ctrl      <- advice ctrl object\n#  Section 15:       assess.ctrl\n#                      assess.models    <- assessment model per fleet\n#                      assess.ctrl      <- assess.ctrl object\n#  Section 16:       obs.ctrl\n#                      stkObs.models    <- Observation model per stock\n#                      obs.ctrl         <- obs.ctrl object\n#  Section 17:       covars.ctrl\n#                      covars.ctrl      <- NULL\n#  Section 18:       FLBEIA input objects\n#  Section 19:       Run FLBEIA\n#  Section 20:       Plot\n#------------------------------------------------------------------------------#\n\nrm(list=ls())\n\n#==============================================================================\n# Section 1:            Charge libraries\n#==============================================================================\n\n  library(FLCore) \n  library(FLAssess)\n  library(FLash)\n  library(Rdonlp2)\n  library(FLFleet)\n  library(FLBEIA) \n\n#==============================================================================\n# Section 2:            Set directory and Load the data\n#==============================================================================\n\n  setwd('c:/use/agur/proyectos/Myfish/FLBEIA')\n  \n\n#==============================================================================\n# Section 3:            Load the data\n#==============================================================================\n\nload(file='Input/biol.data.RData')\nload(file='Input/SR.model.RData')\n\n#==============================================================================\n# Section 4:            Set Simulation parameters related with time\n#==============================================================================\n  \n  first.yr          <- 1980\n  proj.yr           <- 2013 \n  last.yr           <- 2015  \n\n#==============================================================================\n#  Section 5:       Set names, age, dimensions \n#==============================================================================\n  \n\n  stks <- c('HKE','HOM','LDB','MEG','MON')\n\n \n  # all stocks the same\n  ni             <- 3\n  ns             <- 1\n  \n  # stock hke\n  HKE.age.min   <- 0\n  HKE.age.max    <- 15\n  HKE.unit       <- 1         \n  \n  # stock hom\n  HOM.age.min    <- 0\n  HOM.age.max    <- 11\n  HOM.unit       <- 1         \n\n  # stock ldb\n  LDB.age.min    <- 0\n  LDB.age.max    <- 7\n  LDB.unit       <- 1         \n\n  # stock meg\n  MEG.age.min    <- 1\n  MEG.age.max    <- 7\n  MEG.unit       <- 1         \n\n  # stock mon\n  MON.age.min    <- 0\n  MON.age.max    <- 30\n  MON.unit       <- 1         \n\n  fls   <- c('fl1','fl2')\n  \n  fl1.mets      <- c('met1','met2')\n  fl1.met1.stks <- c('stk1','stk2')\n  fl1.met2.stks <- c('stk1','stk2')\n  \n  fl2.mets      <- c('met1','met2')\n  fl2.met1.stks <- c('stk1','stk2')\n  fl2.met2.stks <- c('stk1','stk2')\n\n#==============================================================================\n# Section 6:            biols\n#==============================================================================\n#  Historical data\n#  stk1_n.flq, m, spwn, fec, wt\n#==============================================================================\n\n  #stock hke\n  HKE_n.flq     <- FLQuant(as.FLQuant(as.matrix(n_hke),dimnames=list(age=0:15,year=1982:2012)),dimnames=list(year=1980:2012))/1000\n  HKE_m.flq     <- FLQuant(as.FLQuant(as.vector(m_hke),dimnames=list(age=0:15,year=1982:2012)),dimnames=list(year=1980:2012))\n  HKE_spwn.flq  <- FLQuant(as.FLQuant(0,dimnames=list(age=0:15,year=1982:2012)),dimnames=list(year=1980:2012))\n  HKE_fec.flq   <- FLQuant(as.FLQuant(as.vector(f_hke),dimnames=list(age=0:15,year=1982:2012)),dimnames=list(year=1980:2012))\n  HKE_wt.flq    <- FLQuant(as.FLQuant(as.matrix(w_hke),dimnames=list(age=0:15,year=1982:2012)),dimnames=list(year=1980:2012))\n  \n  HKE_range.min       <- 0\n  HKE_range.max       <- 15\n  HKE_range.plusgroup <- 15\n  HKE_range.minyear   <- 1982\n  HKE_range.minfbar   <- 0\n  HKE_range.maxfbar   <- 15\n\n# stock hom\n  HOM_n.flq     <- FLQuant(as.FLQuant(as.matrix(n_hom),dimnames=list(age=0:11,year=1992:2012)),dimnames=list(year=1980:2012))*1000\n  HOM_m.flq     <- FLQuant(as.FLQuant(as.matrix(m_hom),dimnames=list(age=0:11,year=1992:2012)),dimnames=list(year=1980:2012))\n  HOM_spwn.flq  <- FLQuant(as.FLQuant(0,dimnames=list(age=0:11,year=1992:2012)),dimnames=list(year=1980:2012))\n  HOM_fec.flq   <- FLQuant(as.FLQuant(as.vector(f_hom),dimnames=list(age=0:11,year=1992:2012)),dimnames=list(year=1980:2012))\n  HOM_wt.flq    <- FLQuant(as.FLQuant(as.matrix(w_hom),dimnames=list(age=0:11,year=1992:2012)),dimnames=list(year=1980:2012))/1000\n\n  HOM_range.min       <- 0\n  HOM_range.max       <- 11\n  HOM_range.plusgroup <- 11\n  HOM_range.minyear   <- 1992\n  HOM_range.minfbar   <- 0\n  HOM_range.maxfbar   <- 11\n\n\n  # stock ldb\n  LDB_n.flq     <- FLQuant(as.FLQuant(as.matrix(n_ldb),dimnames=list(age=0:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  LDB_m.flq     <- FLQuant(as.FLQuant(0.2,dimnames=list(age=0:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  LDB_spwn.flq  <- FLQuant(as.FLQuant(0,dimnames=list(age=0:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  LDB_fec.flq   <- FLQuant(as.FLQuant(as.matrix(f_ldb),dimnames=list(age=0:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  LDB_wt.flq    <- FLQuant(as.FLQuant(as.matrix(w_ldb),dimnames=list(age=0:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  \n  LDB_range.min       <- 0\n  LDB_range.max       <- 7\n  LDB_range.plusgroup <- 7\n  LDB_range.minyear   <- 1986\n  LDB_range.minfbar   <- 0\n  LDB_range.maxfbar   <- 7\n\n  # stock meg\n  MEG_n.flq     <- FLQuant(as.FLQuant(as.matrix(n_meg),dimnames=list(age=1:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  MEG_m.flq     <- FLQuant(as.FLQuant(0.2,dimnames=list(age=1:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  MEG_spwn.flq  <- FLQuant(as.FLQuant(0,dimnames=list(age=1:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  MEG_fec.flq   <- FLQuant(as.FLQuant(as.matrix(f_meg),dimnames=list(age=1:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  MEG_wt.flq    <- FLQuant(as.FLQuant(as.matrix(w_meg),dimnames=list(age=1:7,year=1986:2012)),dimnames=list(year=1980:2012))\n  \n  MEG_range.min       <- 1\n  MEG_range.max       <- 7\n  MEG_range.plusgroup <- 7\n  MEG_range.minyear   <- 1986\n  MEG_range.minfbar   <- 1\n  MEG_range.maxfbar   <- 7\n\n  # stock mon\n  MON_n.flq     <- as.FLQuant(as.matrix(n_mon),dimnames=list(age=0:30,year=1980:2012))\n  MON_m.flq     <- as.FLQuant(0.2,dimnames=list(age=0:30,year=1980:2012))\n  MON_spwn.flq  <- as.FLQuant(0,dimnames=list(age=0:30,year=1980:2012))\n  MON_fec.flq   <- as.FLQuant(as.vector(f_mon),dimnames=list(age=0:30,year=1980:2012))\n  MON_wt.flq    <- as.FLQuant(as.matrix(w_mon),dimnames=list(age=0:30,year=1980:2012))\n  \n  MON_range.min       <- 0\n  MON_range.max       <- 30\n  MON_range.plusgroup <- 30\n  MON_range.minyear   <- 1980\n  MON_range.minfbar   <- 0\n  MON_range.maxfbar   <- 30\n\n#               Projection: \n#  we assume that the projection values of some variables are equal to \n#  the average of some historical years:weight,fecundity,mortality and spawning    \n  \n  HKE_biol.proj.avg.yrs  <- c(2010:2012)\n  HOM_biol.proj.avg.yrs  <- c(2010:2012)\n  LDB_biol.proj.avg.yrs  <- c(2010:2012)\n  MEG_biol.proj.avg.yrs  <- c(2010:2012)\n  MON_biol.proj.avg.yrs  <- c(2010:2012)\n\n\n#==============================================================================\n# Section 7:            fleets\n#==============================================================================\n# Data per fleet\n#    effort, crewshare, fcost, capacity\n# Data per fleet and metier\n#    effshare, vcost\n# Data per fleet, metier and stock\n#    landings.n, discards.n,landings.wt, discards.wt, landings, discards, landings.sel, discards.sel, price\n#==============================================================================\n          \n          fl1_effort.flq        <- as.FLQuant(read.csv(file = 'data/fl1_effort.csv'))\n          fl1_capacity.flq      <- as.FLQuant(read.csv(file = 'data/fl1_capacity.csv'))\n          fl1.met1_effshare.flq <- as.FLQuant(read.csv(file = 'data/fl1.met1_effshare.csv'))\n          fl1.met2_effshare.flq <- as.FLQuant(read.csv(file = 'data/fl1.met2_effshare.csv'))\n\n          fl1.met1.stk1_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met1.stk1_landings.n.csv'))\n          fl1.met1.stk1_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met1.stk1_discards.n.csv'))\n          fl1.met1.stk2_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met1.stk2_landings.n.csv'))\n          fl1.met1.stk2_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met1.stk2_discards.n.csv'))\n\n          fl1.met2.stk1_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met2.stk1_landings.n.csv'))\n          fl1.met2.stk2_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl1.met2.stk2_landings.n.csv'))\n\n          fl2_effort.flq   <- as.FLQuant(read.csv(file = 'data/fl2_effort.csv'))\n          fl2_capacity.flq <- as.FLQuant(read.csv(file = 'data/fl2_capacity.csv'))\n          fl2_fcost.flq    <- as.FLQuant(read.csv(file = 'data/fl2_fcost.csv'))\n\n          fl2.met1_effshare.flq <- as.FLQuant(read.csv(file = 'data/fl2.met1_effshare.csv'))\n          fl2.met2_effshare.flq <- as.FLQuant(read.csv(file = 'data/fl2.met2_effshare.csv')) \n          fl2.met1_vcost.flq    <- as.FLQuant(read.csv(file = 'data/fl2.met1_vcost.csv'))\n          fl2.met2_vcost.flq    <- as.FLQuant(read.csv(file = 'data/fl2.met2_vcost.csv'))\n\n          fl2.met1.stk1_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met1.stk1_landings.n.csv'))\n          fl2.met2.stk1_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met2.stk1_landings.n.csv'))\n          fl2.met1.stk2_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met1.stk2_landings.n.csv'))\n          fl2.met2.stk2_landings.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met2.stk2_landings.n.csv'))\n          fl2.met1.stk1_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met1.stk1_discards.n.csv'))\n          fl2.met2.stk1_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met2.stk1_discards.n.csv'))\n          fl2.met1.stk2_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met1.stk2_discards.n.csv'))\n          fl2.met2.stk2_discards.n.flq <- as.FLQuant(read.csv(file = 'data/fl2.met2.stk2_discards.n.csv'))\n\n#         Projection\n#==============================================================================\n#         fleets: fl1\n#==============================================================================\n\n          fl1_proj.avg.yrs           <- c(2003:2005)\n          fl1.met1_proj.avg.yrs      <- c(2003:2005)   \n          fl1.met2_proj.avg.yrs      <- c(2003:2005)   \n\n          fl1.met1.stk1_proj.avg.yrs <- c(2003:2005)  \n          fl1.met1.stk2_proj.avg.yrs <- c(2003:2005)\n\n          fl1.met2.stk1_proj.avg.yrs <- c(2003:2005)  \n          fl1.met2.stk2_proj.avg.yrs <- c(2003:2005)\n\n#==============================================================================\n#         fleets: fl2\n#==============================================================================\n\n          fl2_proj.avg.yrs           <- c(2005,2007,2008)\n          fl2.met1_proj.avg.yrs      <- c(2005,2007,2008)\n          fl2.met2_proj.avg.yrs      <- c(2005,2007,2008)\n\n          fl2.met1.stk1_proj.avg.yrs <- c(2005,2007,2008)\n          fl2.met2.stk1_proj.avg.yrs <- c(2005,2007,2008)\n\n          fl2.met1.stk2_proj.avg.yrs <- c(2005,2007,2008)\n          fl2.met2.stk2_proj.avg.yrs <- c(2005,2007,2008)\n\n#==============================================================================\n#  Section 8:       SRs\n#==============================================================================\n\n    HKE_sr.model        <- 'ricker'\n    HKE_params.n        <- 2\n    HKE_params.name     <- c('a','b') \n    HKE_params.array    <- array(as.vector(sr.hke.rick.cervino@params),dim = c(HKE_params.n,length(first.yr:last.yr),ns,ni), \n                                 dimnames = list(param=HKE_params.name,year = ac(first.yr:last.yr),season=ac(1:ns), iter = 1:ni))   \n    \n    HKE_rec.flq         <- FLQuant(sr.hke.rick.cervino@rec,dimnames=list(year=1980:2012))             \n    HKE_ssb.flq         <- FLQuant(sr.hke.rick.cervino@ssb,dimnames=list(year=1980:2012))    \n    HKE_uncertainty.flq <- as.FLQuant(sd.rick,dimnames=list(year=1980:last.yr))     \n    HKE_proportion.flq  <- FLQuant(1,dimnames=list(year=1980:last.yr))\n    HKE_prop.avg.yrs    <- ac(2006:2008)\n    HKE_timelag.matrix  <- matrix(c(1,0),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n    \n    \n    HOM_sr.model        <- 'segreg'\n    HOM_params.n        <- 2\n    HOM_params.name     <- c('a','b') \n    HOM_params.array    <- array(as.vector(sr.hom@params),dim = c(HOM_params.n,length(first.yr:last.yr),ns,ni), \n                                 dimnames = list(param=HOM_params.name,year = ac(first.yr:last.yr),season=ac(1:ns), iter = 1:ni))   \n    \n    HOM_rec.flq         <- FLQuant(sr.hom@rec,dimnames=list(year=1980:2012))             \n    HOM_ssb.flq         <- FLQuant(sr.hom@ssb,dimnames=list(year=1980:2012))    \n    #     HOM_uncertainty.flq <- as.FLQuant(read.csv(file = 'data/stk1_uncertainty.csv'))     \n    HOM_proportion.flq  <- FLQuant(1,dimnames=list(year=1980:last.yr))\n    HOM_prop.avg.yrs    <- ac(2006:2008)\n    HOM_timelag.matrix  <- matrix(c(1,0),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n    \n    LDB_sr.model        <- 'segreg'\n    LDB_params.n        <- 2\n    LDB_params.name     <- c('a','b') \n    LDB_params.array    <- array(as.vector(sr.ldb@params),dim = c(LDB_params.n,length(first.yr:last.yr),ns,ni), \n                                 dimnames = list(param=LDB_params.name,year = ac(first.yr:last.yr),season=ac(1:ns), iter = 1:ni))   \n    \n    LDB_rec.flq         <- FLQuant(sr.ldb@rec,dimnames=list(year=1980:2012))             \n    LDB_ssb.flq         <- FLQuant(sr.ldb@ssb,dimnames=list(year=1980:2012))    \n    #     LDB_uncertainty.flq <- as.FLQuant(read.csv(file = 'data/stk1_uncertainty.csv'))     \n    LDB_proportion.flq  <- FLQuant(1,dimnames=list(year=1980:last.yr))\n    LDB_prop.avg.yrs    <- ac(2006:2008)\n    LDB_timelag.matrix  <- matrix(c(1,0),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n    \n    \n    MEG_sr.model        <- 'segreg'\n    MEG_params.n        <- 2\n    MEG_params.name     <- c('a','b') \n    MEG_params.array    <- array(as.vector(sr.meg@params),dim = c(MEG_params.n,length(first.yr:last.yr),ns,ni), \n                                 dimnames = list(param=MEG_params.name,year = ac(first.yr:last.yr),season=ac(1:ns), iter = 1:ni))   \n    \n    MEG_rec.flq         <- FLQuant(sr.meg@rec,dimnames=list(year=1980:2012))             \n    MEG_ssb.flq         <- FLQuant(sr.meg@ssb,dimnames=list(year=1980:2012))    \n    #     MEG_uncertainty.flq <- as.FLQuant(read.csv(file = 'data/stk1_uncertainty.csv'))     \n    MEG_proportion.flq  <- FLQuant(1,dimnames=list(year=1980:last.yr))\n    MEG_prop.avg.yrs    <- ac(2006:2008)\n    MEG_timelag.matrix  <- matrix(c(2,0),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n    \n    \n    MON_sr.model        <- 'segreg'\n    MON_params.n        <- 2\n    MON_params.name     <- c('a','b') \n    MON_params.array    <- array(as.vector(sr.mon@params),dim = c(MON_params.n,length(first.yr:last.yr),ns,ni), \n                                 dimnames = list(param=MON_params.name,year = ac(first.yr:last.yr),season=ac(1:ns), iter = 1:ni))   \n    \n    MON_rec.flq         <- FLQuant(sr.mon@rec,dimnames=list(year=1980:2012))             \n    MON_ssb.flq         <- FLQuant(sr.mon@ssb,dimnames=list(year=1980:2012))    \n    #     MON_uncertainty.flq <- as.FLQuant(read.csv(file = 'data/stk1_uncertainty.csv'))     \n    MON_proportion.flq  <- FLQuant(1,dimnames=list(year=1980:last.yr))\n    MON_prop.avg.yrs    <- ac(2006:2008)\n    MON_timelag.matrix  <- matrix(c(1,0),2,ns, dimnames = list(c('year', 'season'),season = 1:ns)) \n\n#==============================================================================\n#  Section 9:       BDs\n#==============================================================================\n     stk2_bd.model        <- 'PellaTom'\n     stk2_param.n         <- 3\n     stk2_params.name     <- c('K','p','r') \n     stk2_params.array    <- xtabs2(data~param+year+season+iter, \n                                    data=read.csv(file = 'data/stk2_params.csv'),exclude=NULL,na.action=na.pass)              \n     stk2_biomass.flq     <- as.FLQuant(read.csv(file = 'data/stk2_biomass.csv'))            \n     stk2_catch.flq       <- as.FLQuant(read.csv(file = 'data/stk2_catch.csv'))               \n     stk2_uncertainty.flq <- as.FLQuant(read.csv(file = 'data/stk2_uncertainty.csv'))          \n\n#==============================================================================\n#  Section 10:       advice:TAC/TAE/quota.share\n#==============================================================================\n\n    stk1_advice.TAC.flq   <- as.FLQuant(read.csv(file = 'data/stk1.tac.csv'))\n    stk1_advice.avg.yrs   <- c(2006:2008)\n\n    stk2_advice.TAC.flq   <- as.FLQuant(read.csv(file = 'data/stk2.tac.csv'))\n    stk2_advice.avg.yrs   <- c(2006:2008)\n\n\n#==============================================================================\n#  Section 11:       main.ctrl\n#==============================================================================\n\n    main.ctrl           <- list()\n    main.ctrl$sim.years <- c(initial = proj.yr, final = last.yr)\n\n#==============================================================================\n#  Section 12:       biols.ctrl\n#==============================================================================\n\n    growth.model     <- c('ASPG','BDPG')\n    biols.ctrl       <- create.biols.ctrl (stksnames=stks,growth.model=c('ASPG','BDPG'))\n\n#==============================================================================\n#  Section 13:       fleets.ctrl\n#==============================================================================\n\n    n.flts.stks      <- c(2,2)\n    flts.stksnames   <- rep(c('stk1','stk2'),2)\n    effort.models    <- c('fixedEffort','SMFB')\n    effort.restr.fl2 <- 'min'\n    restriction.fl2  <- 'catch'\n    catch.models     <- rep(c(\"CobbDouglasAge\", \"CobbDouglasBio\"),2)\n    capital.models   <- rep('fixedCapital',2)\n    price.models     <- NULL                            \n    flq              <- create.list.stks.flq ()[['stk1']][,,1,]    \n    \n    fleets.ctrl      <- create.fleets.ctrl(fltsnames=fls,n.flts.stks=n.flts.stks,flts.stksnames=flts.stksnames,\n                                           effort.models= effort.models, catch.models=catch.models,\n                                           capital.models=capital.models, price.models=price.models,flq=flq,\n                                           effort.restr.fl2 = effort.restr.fl2, restriction.fl2 = restriction.fl2)\n\n#==============================================================================\n#  Section 14:       advice.ctrl\n#==============================================================================\n\n\n    HCR.models       <- c('IcesHCR','annualTAC') \n    Ftarget.stk2     <- 0.3\n    ref.pts.stk1     <- matrix(c(0.24, 50000, 150000), 3,ns, dimnames = list(c('Fmsy', 'Blim', 'Btrigger'), 1:ns))\n    \n    advice.ctrl      <- create.advice.ctrl(stksnames = stks, HCR.models =  HCR.models, \n                        ref.pts.stk1 = ref.pts.stk1, Ftarget.stk2 = Ftarget.stk2)\n\n    advice.ctrl[['stk1']][['sr']]            <- list()\n    advice.ctrl[['stk1']][['sr']][['model']] <- 'segreg'\n    advice.ctrl[['stk1']][['sr']][['years']] <- c(y.rm = 2, num.years = 10)\n    \n#==============================================================================\n#  Section 15:       assess.ctrl\n#==============================================================================\n\n    assess.models    <- rep('NoAssessment',2)\n    \n    assess.ctrl      <- create.assess.ctrl(stksnames = stks, assess.models = assess.models)\n\n#==============================================================================\n#  Section 16:       obs.ctrl\n#==============================================================================\n\n    stkObs.models    <- rep('perfectObs',2)\n    \n    obs.ctrl         <- create.obs.ctrl(stksnames = stks,  stkObs.models = stkObs.models)\n\n#==============================================================================\n#  Section 17:       covars.ctrl\n#==============================================================================\n\n    covars.ctrl      <- NULL\n  \n#==============================================================================\n#  Section 18:       FLBEIA input objects\n#==============================================================================\n    \n    biols    <- create.biols.data()\n    biols[['MON']] <- setPlusGroup(biols[['MON']], plusgroup = 13)\n    biols[['MON']]@n['13',as.character(proj.yr:last.yr)]    <- NA\n    biols[['MON']]@m['13',as.character(proj.yr:last.yr)]    <- 0.2\n    biols[['MON']]@wt['13',as.character(proj.yr:last.yr)]   <- mean(biols[['MON']]@wt['13', as.character(MON_biol.proj.avg.yrs)])\n    biols[['MON']]@fec['13',as.character(proj.yr:last.yr)]  <- mean(biols[['MON']]@fec['13', as.character(MON_biol.proj.avg.yrs)])\n    biols[['MON']]@spwn['13',as.character(proj.yr:last.yr)] <- 0\n    save(biols,file='R/biols.RData')\n    \n    fleets   <- create.fleets.data()\n    save(fleets,file='R/fleets.RData')\n    \n    SRs      <- create.SRs.data()\n    save(SRs,file='R/SRs_HKE_rick.RData')\n    \n    BDs       <- create.BDs.data()\n    save(BDs,file='R/BDs.RData')\n    \n    advice   <- create.advice.data()\n    save(advice,file='R/advice.RData')\n    \n    covars <- NULL\n    \n    indices <- NULL\n    \n#==============================================================================\n#  Section 19:       Run FLBEIA\n#==============================================================================\n    \n    s0 <- FLBEIA(biols = biols, SRs = SRs, BDs = BDs, fleets=fleets, covars = covars, \n              indices = indices, advice = advice, main.ctrl = main.ctrl, \n              biols.ctrl = biols.ctrl, fleets.ctrl = fleets.ctrl, \n              covars.ctrl = covars.ctrl, obs.ctrl = obs.ctrl, \n              assess.ctrl = assess.ctrl, advice.ctrl = advice.ctrl) \n    \n    save(s0,file='2stock2fleets4seasons/R/results/s0.RData')\n    \n#==============================================================================\n#  Section 20:       Plot\n#==============================================================================\n    \n    load('R/results/s0.RData')\n\n  s0_sum      <- bioSum(s0)\n  s0_eco      <- ecoSum(s0$fleets, 'all', ac((proj.yr+1):last.yr))\n  s0_catchFl  <- catchFlSum(s0$fleets, 'all', 'all', ac((proj.yr+1):last.yr))\n  s0_M        <- aggregate(list(value = s0_sum$value), list(year = s0_sum$year, indicator = s0_sum$indicator), median, na.rm=T)\n  \n  pdf('2stock2fleets4seasons/plots/2stock2fleets4seasons.pdf', width = 12, height = 7, pointsize = 8)\n  \n  print(xyplot(value~ year|indicator, data = s0_M,  subset = indicator %in% c('ssb', 'catch','rec', 'f'),\n               ylab = list(label = c('tonnes','millions','tonnes'), fontsize = 10),\n               xlab = \"\", layout = c(2,2),\n             scales = list(y = list(relation = 'free')),   main = \"2 stock; 2 fleets; 4 seasons\",\n               type=\"b\", col = c('black'), lwd = 1, cex = 0.5,\n               lty = 1, pch = 0))\n  \n  print(bwplot(value~year|indicator, data = s0_sum,\n               subset = indicator %in% c('ssb', 'catch','rec', 'f') & year < last.yr,\n               horizontal =F, scale = list(relation = 'free'),main= '2 stock; 2 fleets; 4 seasons',\n               scales=list(x = list(at=seq(1,70,6),lab=seq(1992,2030,6),\n                                    relation = \"free\"),y=list(relation=\"free\"))))\n  \n  print(bwplot(effort~year|fleet,data = s0_eco,main = 'Effort', scales=list(x = list(at=seq(1,18,4),lab=seq(2012,2030,4), relation = \"free\"))))\n  \n  print(bwplot(price~year|fleet, data = s0_catchFl,main= 'Price',\n               ,scales=list(x = list(at=seq(1,18,4),lab=seq(2012,2030,4), relation = \"free\"))))\n\n\n  dev.off()\n  ",
    "created" : 1385476894327.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3644811261",
    "id" : "A95FDB57",
    "lastKnownWriteTime" : 1385486456,
    "path" : "~/agur/proyectos/Myfish/FLBEIA/R/Myfish_FLBEIA_conditioning.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}