{
    "contents" : "# 2014/11/13\nlibrary(FLCore)\nlibrary(FLBEIA)\nlibrary(moments)\nlibrary(fGarch)\nlibrary(lattice)\nlibrary(truncnorm)\n\nload(\"~/Google Drive/Myfish/FLBEIA/Data/GridDataSets/Myfish_1.RData\")\noutput_file <- 'c:/use/Dropbox/Tesia/Sensitivity Analysis/Data/UncertaintyModelling_Mat&Wght.RData'\n\nsum(sapply(biols, function(x) dim(x@n)[1]))\n\n\n\n# MON length weigth\n# W = 2.70??10-5*L2.839\n# Growth\n# Linf = 140 cm and K = 0.11+\n# Maturity:\n#Landa, J.,  Antol??nez, A., Castro, B., ??mez, M., Aut??n, U., Ca????s, L., Sampedro, P., Fari??a, A.C.\n#2012. Reproduction of white anglerfish (Lophius piscatorius) caught by the Spanish fleet in\n#Northeastern Atlantic waters. Working Document in WKFLAT 2012. \n\n# Length weight\n# L. whiffiagonis L. boscii\n# a 0.006488 0.00431 \n# b 3.0114 3.1904 \n#Maturity ogive from biosdef,\n\nLW_MODELS <- vector('list',5)\nnames(LW_MODELS) <- c(\"HKE\", \"HOM\", \"LDB\", \"MEG\", \"MON\")\nLMat_MODELS <- vector('list',5)\nnames(LMat_MODELS) <- c(\"HKE\", \"HOM\", \"LDB\", \"MEG\", \"MON\")\n\nsetwd('~/Google Drive/Tesia/Sensitity Analysis/')\n#==================================================================================================\n#  HAKE WEIGHT\n#===============================================================================================\nload(\"~/Google Drive/Tesia/Sensitity Analysis/Input/matOgives.RData\")\nload(\"~/Google Drive/Tesia/Sensitity Analysis/Input/hkeAge.RData\")\n\n# HKE length weigth relationship\n# a=0.00000659, b=3.01721). \n# age length relationship t0=0, Linf=130 cm and k=0.164 (re-\n# Maturity ogive, there is variable data\n# En  C:\\Users\\dgarcia\\Downloads\\runFinal\\scripts\\R.data tenemos datos de maturity at length por a??o\nst  <- 'HKE'\nyrs <-  ac(biols[[st]]@range['minyear']:2012)\n\nbiols[[st]]@wt[,ac(yrs)]\n\nmatplot(biols[[st]]@wt[,ac(yrs), drop=T], type = 'l')\n\n# Low variability, only comes from the variability in growth => analyse Azti's data.\nfls <- dir('./Input/bio hke', pattern = 'Biol')\n\nfl1 <- subset(read.csv(paste('./Input/bio hke', fls[1], sep = \"/\")), NombreZona == 'VIIIc')\nyr1 <- strsplit(as.character(fl1[,2]), \"/\")\nyr <- sapply(strsplit(sapply(yr1, function(x) x[3]), \" \"), function(x) x[1])\nHakeLW <- cbind(year = as.numeric(yr), length = as.numeric(fl1[,'TallaTotal']), weight = as.numeric(fl1[,'PesoTotal']))\n\nfl2 <- subset(read.csv(paste('./Input/bio hke', fls[2], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = as.numeric(fl2[,'Ano_Venta']), length = as.numeric(fl2[,'TallaTotal']), weight = as.numeric(fl2[,'PesoTotal'])))\n\nfl3 <- subset(read.csv(paste('./Input/bio hke', fls[3], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = 2008, length = as.numeric(fl3[,'TallaTotal']), weight = as.numeric(fl3[,'PesoTotal'])))\n\nfl4 <- subset(read.csv(paste('./Input/bio hke', fls[4], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = 2009, length = as.numeric(fl4[,'TallaTotal']), weight = as.numeric(fl4[,'PesoTotal'])))\n\nfl5 <- subset(read.csv(paste('./Input/bio hke', fls[5], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = 2010, length = as.numeric(fl5[,'TallaTotal']), weight = as.numeric(fl5[,'PesoTotal'])))\n\nfl6 <- subset(read.csv(paste('./Input/bio hke', fls[6], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = 2011, length = as.numeric(fl6[,'TallaTotal']), weight = as.numeric(fl6[,'PesoTotal'])))\n\nfl7 <- subset(read.csv(paste('./Input/bio hke', fls[7], sep = \"/\")), NombreZona == 'VIIIc')\nHakeLW <- rbind(HakeLW, cbind(year = 2012, length = as.numeric(fl7[,'TallaTotal']), weight = as.numeric(fl7[,'PesoTotal'])))\n\nHakeLW <- as.data.frame(HakeLW)\nHakeLW <- subset(HakeLW, as.numeric(length) < 1000)\n\nplot(HakeLW$length,HakeLW$weight)\n\noutliers <- identify(HakeLW$length,HakeLW$weight) #  2201 2423 2669 6691\n\nHakeLW <- HakeLW[-outliers,]\nplot(HakeLW$length,HakeLW$weight)\nxyplot(weight ~ length, data = HakeLW, groups = year)\n\n# FIT THE LW CURVES BY YEAR\nLWmodels <- vector('list', 13)\nnames(LWmodels) <- c(2001:2012, 'all')\nLWmodels[[13]] <- lm(log(weight) ~ log(length), data = HakeLW)  \n\nLWpars <- matrix(NA,13,2, dimnames = list(c(2001:2012, 'all'), c('log(a)', 'b')))\n\nLWpars['all',] <- coef(LWmodels[[13]])\nfor(yr in 2001:2012){\n  LWmodels[[ac(yr)]] <- lm(log(weight) ~ log(length), data = HakeLW, subset = year == yr)  \n  LWpars[ac(yr),] <- coef(LWmodels[[ac(yr)]])\n}\n\nl <- seq(0,1000,10)\nplot(l, exp(LWpars['all',1])*l^LWpars['all',2], type = 'l', main = 'Hake LW Curves', ylab = 'weight', xlab = 'length', lwd = 2) \nfor(yr in 2001:2012) lines(l, exp(LWpars[ac(yr),1])*l^LWpars[ac(yr),2], type = 'b', lty = 1, lwd = 2, col = rainbow(12)[2013-yr], pch = ac(2013-yr) ) \n\nplot(HakeLW$length,HakeLW$weight)\nlines(l, exp(LWpars['all',1])*l^LWpars['all',2], type = 'l', lty = 1, lwd = 2, col = 2 ) \n\n# bootstrap\nstd <- sd(resid(LWmodels[['all']]))\nNboot <- 1000\nLWboot <- matrix(NA,Nboot,2)\nfor(i in 1:Nboot){\n  lngth <- (log(HakeLW$length) + rnorm(length(HakeLW$length),0,std))\n  LWboot[i,] <- coef(lm(log(weight) ~ lngth, data = HakeLW))\n}\n  \nplot(LWboot[,1], LWboot[,2])\nhist(LWboot[,1]) \nhist(LWboot[,2])\nqqnorm(LWboot[,1]) \nqqnorm(LWboot[,2]) \n\n# A perfect linear  relationship an both are normal => b as a function of a.\nLWlm.hke <- lm(LWboot[,2] ~ LWboot[,1])\n# The residulas are very very small R2= 0.9975 so we don't add errors to the a and be relationship\n\nLW_MODELS$HKE <- list(model = 'linear', formula = \"beta ~ alpha & alpha ~ Normal\", \n                             params = c(coef(LWlm.hke),resid.std = sd(resid(LWlm.hke))),\n                             vcov.params = vcov(LWlm.hke),\n                             alpha.params = c(mean = mean(LWboot[,1]), sd(LWboot[,2])))\n\n\n# The uncertainty in the WG DATA is very low\nwt <- hkeAge[,c(1,3,5)]\nxyplot(wPop ~ age, data = hkeAge, groups = year, type = 'l', subset = step == 1)\nxyplot(wPop ~ age, data = hkeAge, groups = year, type = 'l', subset = step == 2)\nxyplot(wPop ~ age, data = hkeAge, groups = year, type = 'l', subset = step == 3)\nxyplot(wPop ~ age, data = hkeAge, groups = year, type = 'l', subset = step == 4)\n\n\n#====================================================================\n# HAKE MATURITY\n#====================================================================\n\nxyplot(mat ~ len, data = matOgives, groups = year, type = 'l')\n\n# Generate age based ogives using age-length from hkeAge data frame and length-mat ogives from matOgives data frame.\nAgeMat <- data.frame(year = rep(1982:2012, each = 16), age = rep(0:15, 31), mat = 0)\n\nfor(a in 0:15){\n  for(y in 1982:2012){\n    l <- round(subset(hkeAge, age == a & year == y & step == 1)$lPop) \n    if(a == 0) next\n    AgeMat[ AgeMat$year == y & AgeMat$age == a,'mat'] <- subset(matOgives, year== y & len == l)$mat\n  }\n}\n\nxyplot(mat ~ age, data = AgeMat, groups = year, type = 'l')\n\n# Git a Logit GLM to original data in length.\nLMat.glm1 <- glm(mat ~ len, data = matOgives, family = binomial(link = 'logit'))\nLMat.glm2 <- glm(mat ~ len, data = matOgives, family = binomial(link = 'probit'))\nLMat.glm3 <- glm(mat ~ len, data = matOgives, family = binomial(link = 'cloglog')) # do not converge\nAIC(LMat.glm1)\nAIC(LMat.glm2) # logit has lower AIC => link = logit\nLMat.glm <- LMat.glm1\n\n\n#LMat.glm <- betareg(mat ~ len, data = matOgives[1:135,], link = 'logit')\n\ntita <- coef(LMat.glm)[1] + (1:130)*coef(LMat.glm)[2]\ny <- exp(tita)/(1+exp(tita))\n\nplot(matOgives$len, matOgives$mat, type = 'p',  col = 1, ylab = 'p', xlab = 'length', main = 'Maturity Ogives', ylim = c(0,1))\nlines(1:130, y, col = 2, lwd = 3)\n\n# bootstrap\nstd <- sd(resid(LWmodels[['all']]))\nNboot <- 1000\nLMatboot <- matrix(NA,Nboot,2)\nfor(i in 1:Nboot){\n  mat_link <- log(matOgives$mat/(1+matOgives$mat)) + rnorm(length(matOgives$len),0,std)\n  mat <- exp(mat_link)/(1+exp(mat_link))\n  LMatboot[i,] <- coef(glm(mat ~ matOgives$len, family = binomial))\n}\n\nplot(LMatboot[,1], LMatboot[,2]) # => linear relatioship between coefficientss.\nhist(LMatboot[,1])\nhist(LMatboot[,12])\n\nqqnorm((LMatboot[,2])) # Both coefficients are extremely normal => beta as a function of alpha for example.\nqqline((LMatboot[,2]))\nqqnorm((LMatboot[,1]))\nqqline((LMatboot[,1]))\n\nLMatlm.hke <- lm(LMatboot[,2] ~ LMatboot[,1])\n\n\nLMat_MODELS$HKE <- list(model = 'linear', formula = \"beta ~ alpha & alpha ~ Normal\", \n                      params = c(coef(LMatlm.hke),resid.std = sd(resid(LMatlm.hke))),\n                      vcov.params = vcov(LMatlm.hke),\n                      alpha.params = c(mean = mean(LMatboot[,1]), sd(LMatboot[,2])))\n\nMatOgives <- vector('list',5)\nnames(MatOgives) <- names(LMat_MODELS$HKE)\n\nMatOgives$HKE <- list(model = 'exp(a+b*len)/(1+exp(a+b*len))', params = c(coef(LMat.glm )))\n\n#====================================================================\n# MEG WEIGHT AT AGE\n#====================================================================\nmatplot(biols[['MEG']]@wt[,ac(1986:2012),drop=T], type = 'l', xlab = 'Age', ylab = 'weight')\n\nAgeW <- as.data.frame(biols[['MEG']]@wt[,ac(1986:2012)])[,c(1,2,7)]\nnames(AgeW)[3] <- 'weight'\n\nAgeW.lm <- lm(log(weight) ~ (age), data = AgeW)\n\nplot(AgeW$age, AgeW$weight, xlab = 'Age', ylab = 'Weight', main = 'Megrim')\nlines(seq(1,7,0.1), exp(coef(AgeW.lm)[1]+seq(1,7,0.1)*coef(AgeW.lm)[2]), lwd = 3, col =2)\n\n# bootstrap\nstd <- sd(resid(AgeW.lm))\nNboot <- 1000\nAgeWboot.meg <- matrix(NA,Nboot,2)\nfor(i in 1:Nboot){\n  lweight <- (log(AgeW$weight) + rnorm(length(AgeW$weight),0,std))\n  AgeWboot.meg[i,] <- coef(lm(lweight ~ (AgeW$age)))\n}\n\nplot(AgeWboot.meg[,1], AgeWboot.meg[,2])\nhist(AgeWboot.meg[,1]) \nhist(AgeWboot.meg[,2])\nqqnorm(AgeWboot.meg[,1]) \nqqnorm(AgeWboot.meg[,2]) \n\n# A perfect linear  relationship an both are normal => b as a function of a.\nAWlm.meg <- lm(AgeWboot.meg[,2] ~ AgeWboot.meg[,1])\n# The residulas are very very small R2= 0.9975 so we don't add errors to the a and be relationship\n\nLW_MODELS$MEG<- list(model = 'linear', formula = \"beta ~ alpha & alpha ~ Normal\", \n                      params = c(coef(AWlm.meg),resid.std = sd(resid(AWlm.meg))),\n                      vcov.params = vcov(AWlm.meg),\n                      alpha.params = c(mean = mean(AgeWboot.meg[,1]), sd(AgeWboot.meg[,1])))\n\n# Fixed Maturity, no data and considered fixed in the WG, to be updated.\n\n\n#====================================================================\n# LDB WEIGHT AT AGE\n#====================================================================\nmatplot(biols[['LDB']]@wt[,ac(1986:2012),drop=T], type = 'l', xlab = 'Age', ylab = 'weight')\n\nAgeW <- as.data.frame(biols[['LDB']]@wt[,ac(1986:2012)])[,c(1,2,7)]\nnames(AgeW)[3] <- 'weight'\n\nAgeW.lm <- lm((weight) ~ (age), data = AgeW)\n\nplot(AgeW$age, AgeW$weight, xlab = 'Age', ylab = 'Weight', main = 'Four-Spot Megrim')\nlines(seq(0,7,0.1), (coef(AgeW.lm)[1]+seq(0,7,0.1)*coef(AgeW.lm)[2]), lwd = 3, col =2)\n\n# bootstrap\nstd <- sd(resid(AgeW.lm))\nNboot <- 1000\nAgeWboot.ldb <- matrix(NA,Nboot,2)\nfor(i in 1:Nboot){\n  weight <- AgeW$weight + rnorm(length(AgeW$weight),0,std)\n  AgeWboot.ldb[i,] <- coef(lm(weight ~ (AgeW$age)))\n}\n\nplot(AgeWboot.ldb[,1], AgeWboot.ldb[,2])\nhist(AgeWboot.ldb[,1]) \nhist(AgeWboot.ldb[,2])\nqqnorm(AgeWboot.ldb[,1]) \nqqnorm(AgeWboot.ldb[,2]) \n\n# A perfect linear  relationship an both are normal => b as a function of a.\nAWlm.ldb <- lm(AgeWboot.ldb[,2] ~ AgeWboot.ldb[,1])\n# The residulas are very very small R2= 0.9975 so we don't add errors to the a and be relationship\n\nLW_MODELS$LDB<- list(model = 'linear', formula = \"beta ~ alpha & alpha ~ Normal\", \n                     params = c(coef(AWlm.ldb),resid.std = sd(resid(AWlm.ldb))),\n                     vcov.params = vcov(AWlm.ldb),\n                     alpha.params = c(mean = mean(AgeWboot.ldb[,1]), sd(AgeWboot.ldb[,1])))\n\n# Fixed Maturity, no data and considered fixed in the WG, to be updated.\n\n\n#====================================================================\n# MON WEIGHT AT AGE\n#====================================================================\nmatplot(biols[['MON']]@wt[,ac(1980:2012),drop=T], type = 'l', xlab = 'Age', ylab = 'weight')\nmatplot(t(biols[['MON']]@wt[,ac(1980:2012),drop=T]), type = 'l', xlab = 'Age', ylab = 'weight')\n\n\nAgeW <- as.data.frame(biols[['MON']]@wt[,ac(1980:2012)])[,c(1,2,7)]\nnames(AgeW)[3] <- 'weight'\n\nAgeW.lm <- lm((weight) ~ (age), data = AgeW)\nplot(AgeW$age, AgeW$weight, xlab = 'Age', ylab = 'Weight', main = 'Monkfish')\nlines(seq(0,13,0.1), (coef(AgeW.lm)[1]+seq(0,13,0.1)*coef(AgeW.lm)[2]), lwd = 3, col =2)\n\n# Variability is almost only present in plusgroup, if we try to model the Age-Wght relationship\n# we obtain negative W for younger ages and  do not catch the variability in plusgroup =>\n# => we consider fixed weight for ages 0-12 and model the uncertainty in plusgroup.\nhist((biols[['MON']]@wt[ac(13),ac(1980:2012)]))\nqqnorm((biols[['MON']]@wt[ac(13),ac(1980:2012)]))\nqqline(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))\n\n# AS a preliminary approach we use a normal distribuition.\nhist((biols[['MON']]@wt[ac(13),ac(1980:2012)]), freq = F, main = 'Monkfish PlusGroup Weight', xlab = 'Kg')\nlines(seq(35,65,0.5), dtruncnorm(seq(35,65,0.5), \n                                a = min(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))*0.95,\n                                b = max(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))*1.05,\n                                mean = mean(c(biols[['MON']]@wt[ac(13),ac(1980:2012)])), \n                                sd = sd(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))),\n      lwd = 2, col = 2)\n\n\nLW_MODELS$MON<- list(model = 'Only PlusGroup', formula = \"A+ ~ TruncNorm\", \n                     params = c(a = min(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))*0.95,\n                                b = max(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))*1.05,\n                                mean = mean(c(biols[['MON']]@wt[ac(13),ac(1980:2012)])), \n                                sd = sd(c(biols[['MON']]@wt[ac(13),ac(1980:2012)]))))\n\n# Fixed Maturity, no data and considered fixed in the WG, to be updated.\n\n#====================================================================\n# HOM WEIGHT AT AGE\n#====================================================================\nmatplot(biols[['HOM']]@wt[,ac(1992:2012),drop=T], type = 'l', xlab = 'Age', ylab = 'weight')\n\nAgeW <- as.data.frame(biols[['HOM']]@wt[,ac(1992:2012)])[,c(1,2,7)]\nnames(AgeW)[3] <- 'weight'\n\nAgeW.lm <- lm((weight) ~ (age), data = AgeW)\n\nplot(AgeW$age, AgeW$weight, xlab = 'Age', ylab = 'Weight', main = 'Four-Spot Megrim')\nlines(seq(0,11,0.1), (coef(AgeW.lm)[1]+seq(0,11,0.1)*coef(AgeW.lm)[2]), lwd = 3, col =2)\n\n# bootstrap\nstd <- sd(resid(AgeW.lm))\nNboot <- 1000\nAgeWboot.hom <- matrix(NA,Nboot,2)\nfor(i in 1:Nboot){\n  weight <- AgeW$weight + rnorm(length(AgeW$weight),0,std)\n  AgeWboot.hom[i,] <- coef(lm(weight ~ (AgeW$age)))\n}\n\nplot(AgeWboot.hom[,1], AgeWboot.hom[,2])\nhist(AgeWboot.hom[,1]) \nhist(AgeWboot.hom[,2])\nqqnorm(AgeWboot.hom[,1]) \nqqline(AgeWboot.hom[,1]) \nqqnorm(AgeWboot.hom[,2]) \nqqline(AgeWboot.hom[,2]) \n\n# A perfect linear  relationship an both are normal => b as a function of a.\nAWlm.hom <- lm(AgeWboot.hom[,2] ~ AgeWboot.hom[,1])\n\nLW_MODELS$HOM<- list(model = 'linear', formula = \"beta ~ alpha & alpha ~ Normal\", \n                     params = c(coef(AWlm.hom),resid.std = sd(resid(AWlm.hom))),\n                     vcov.params = vcov(AWlm.hom),\n                     alpha.params = c(mean = mean(AgeWboot.hom[,1]), sd(AgeWboot.hom[,1])))\n\n# Fixed Maturity, no data and considered fixed in the WG, to be updated.\n\n#================================================================================\n# NATURAL MORTALITY\n#================================================================================\n# Dado un CV calculamos intervalos de confianza uniformes con M en el centro.\n# CV => lambda = CV*sqrt(3)\n#       a = M*(1-lambda)\n#       B = M*(1+lambda)\n\nCV <- 0.3\nNMORT_MODELS <- list()\n\nNMORT_MODELS$HKE <- list()\n\n\nsave(LW_MODELS, LMat_MODELS, file = output_file)\n\n",
    "created" : 1444309943635.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2550533744",
    "id" : "8BBEDE3C",
    "lastKnownWriteTime" : 1444310885,
    "path" : "~/Google Drive/Tesia/Sensitity Analysis/R/Uncertainty conditioning/01_Uncertainty_Biological_Parameters.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}