{
    "contents" : "############ IDENTIFYING DETAILS OF STOCK, BIOLOGY, FISHERY AND SR FEATURES:  #########\n\nlibrary(r4ss); # update_r4ss_files(local='c:/SS/update_r4ss',save=F);require(r4ss)\nupdate_r4ss_files() \n\n################################################################################\n################################################################################\n###### START FILL IN SECTION:\n\nset.seed(1)\n \nstockname <- \"Nhake\"   # SS3 dynamics, 3 morphs per year, quarterly time step\n\nwd <- \"c:/use/ICES/wkmsyref4/SS3_BRP/\"\nsetwd(wd)\n\ndirSS3output <- \"C:/use/ICES/WKSOUTH/runs/05 Server/wksouth final/retrospectives/retro0/\"\n\n###### FILL IN A RUN NUMBER HERE: (Run identifier) \n## 1) The output file with BRPs will be named according to this run number\n## 2) If SR parameters correspond to a previous SR fit, then SR parameters are read from a file containing this run number in the title\nrunnumber <- \"140511_01\"\n\n## LENGTHS OVER WHICH TO COMPUTE FBAR:\nlmin <- 15;  lmax <- 80\n\n## AGE UNTIL WHICH GROWTH IS ASSUMED TO BE LINEAR (INSTEAD OF VON-BERTALANFFY):\namin <- 0.75\n\n## Options for computing F status quo (for Biological Reference Points calculation):\n\n## Uncertainty in selectivity?\nuncertainsel <- TRUE\n\nnyrbootstrapsel <- NA; nyraveragesel <- NA\n# Number of final assessment years over which to bootstrap or average (for each fleet and quarter separately), the selection-at-length and retention-at-length patterns:\n# boostrap is used if uncertainsel==TRUE and average is used if uncertainsel==FALSE\n# FILL IN THE NUMBER OF YEARS HERE: \nif(uncertainsel){nyrbootstrapsel <- 10}else{nyraveragesel <- 3} \n\n# For each fleet and quarter separately, F-stquo is scaled so that Fbar(lmin-lmax) corresponds to the average of final \"nyrFbarstquo\" assessment years\n# If nyrFbarstquo = 1, it means that F-stquo is **scaled to final year**; typically, nyrFbarstquo is taken as 3\nnyrFbarstquo <- 3\n\n## \"fmult\":\nfmult <- seq(0,2.5,0.01) ## multiplicative factor of F-stquo for BRP computation\n\n## Candidate Blim and Bpa (or just put in any \"interesting\" SSB values):\nBlim <- 32000; Bpa <- 45000   \nICES_HCR <- FALSE\n\n## \"StochasticR\" is whether or not Recruitment is drawn stochastically on an **annual** basis (in other words, annual stochastic departures from the SR model) for the BRP calculation:\nStochasticR <- TRUE\nif(StochasticR){ \n  nyrprojection <- 150\n  # rhologR: time autocorrelation in log(Rec) -- should be between 0 and 1: \n  rhologR <- 0.5\n  # siglogR to be read from the file containing SR fits\n  \n  ## Errors in F: logFerr follows AR(1) process with parameters:\n  ## Set the two parameters to 0 if you do NOT want errors in F\n  rhologFerr <-  0.423  #0.64  ## time autocorrelation (Fphi in EqSim) -- should be between 0 and 1:\n  siglogFerr <-  0.233 # 0.88/sqrt(1-0.64^2)  ## standard deviation of marginal distribution (siglogFerr is equal to Fcv/sqrt(1-Fphi^2), where Fcv and Fphi are the EqSim parameters)\n  \n  ## SSB value for application of ICES MSY HCR (for just a constant F, i.e. NO ICES MSY HCR, then set Btrigger to 0):\n  Btrigger <- 45000\n\n}\n\n## number of replicates, to account for uncertainty in BRP computations (\"nreplicates\"=1 means no uncertainty) \n## I normally use nreplicates = 500 (note: quite slow when StochasticR=TRUE)\nnreplicates <- 1000\n\n###### END FILL IN SECTION:\n################################################################################\n################################################################################\n\n## SR model: Options are: none (for Per-Recruit reference points only), BH, RK, HS, SP, RJMCMC\nmodels <- c(\"RJMCMC\")\nfor(modelname in models){\n#for(modelname in c(\"none\")){\n\n# srparamstype is either (alpha,beta) \"albe\" or (h,R0) \"hR0\"\nsrparamstype <- \"albe\"\nif(modelname == \"none\"){srparamstype <- \"\"}\n\nrunidentifier <- paste(srparamstype,runnumber,sep=\"_\")\n\nif(StochasticR == TRUE){runidentifier <- paste(runidentifier,\"StochR_rhologR\",rhologR,sep=\"_\")}\n\n## Directory containing the input data files for the given stock\n## Output files will also be stored here:\nstockdirectory <- paste(wd,stockname,\"/\",sep=\"\")\n\nif(modelname==\"none\"){auxi <- \"Output/PerRec\"}else{auxi <- paste(\"Output/SRrun\",runnumber,sep=\"_\")}\n\nplotfilename = paste(stockdirectory,auxi,\"/\",stockname,\"_\",modelname,\"-\",runidentifier,\".pdf\",sep=\"\") \nvaluesfilename = paste(stockdirectory,auxi,\"/\",stockname,\"_\",modelname,\"-\",runidentifier,\"-BRP\",sep=\"\")\n\n## DISTRIBUTION OF SR PARAMETERS:\nif(modelname!=\"none\"){\n\n  ## SR parameters read from an external file that contains results (set of MCMC draws) from SR Bayesian fit: \n  source( file=paste(paste(stockdirectory,\"Input Data Files/\",stockname,\"-SR\", sep=\"\"),\"_\",modelname,\"-MCMCdraws-\",runnumber,\".txt\",sep=\"\") ) \n\n  ## Standard deviation of log(Rec) around the log(SR) curve(used only with \"StochasticR\" option)\n  siglogR <- 1/sqrt(tau)\n  \n  ## SR curve may have been parameterised based on (alpha,beta) or (h,R0):\n  if(srparamstype==\"albe\"){\n      par1 <- alpha  \n      par2 <- beta\n      if(modelname==\"RJMCMC\"){par3 <- srtype}\n  }else if(srparamstype==\"hR0\"){\n      par1 <- h\n      par2 <- R0  \n      if(modelname == \"HS\"){par1 <- alphaspr0} \n      if(modelname==\"RJMCMC\"){par3 <- srtype; par1[par3==3] <- alphaspr0[par3==3]}\n  }  \n\n  ## If more than \"nreplicates\" draws were kept for the SR parameters, select \"nreplicates\" equally spaced values:\n  if( length(par1) > nreplicates){\n     auxi <- seq(round(length(par1)/nreplicates),length(par1),length=nreplicates)\n     par1 <- par1[auxi] \n     par2 <- par2[auxi]\n     if(modelname == \"RJMCMC\"){par3 <- par3[auxi]}\n     siglogR <- siglogR[auxi]\n  }\n  \n  srparams <- cbind(par1,par2); if(modelname == \"RJMCMC\"){srparams <- cbind(srparams,par3)}\n\n}\n\n\n## Introducting stochasticity in annual Recruitment values:\nif(StochasticR){\n  devlogR <- matrix(rnorm(n=nreplicates*nyrprojection, mean=0, sd=1)*siglogR, nrow=nreplicates)\n  for(j in 2:ncol(devlogR)){ devlogR[,j] <- rhologR*devlogR[,j-1] + sqrt(1-rhologR^2)*devlogR[,j] }\n  #devlogR[,] <- 0\n  \n  ## AR(1) is for log(Ferr); we exponentiate at the end to get the \"real\" Ferr\n  Ferr <- matrix(rnorm(n=nreplicates*nyrprojection, mean=0, sd=1)*siglogFerr, nrow=nreplicates)\n  for(j in 2:ncol(Ferr)){ Ferr[,j] <- rhologFerr*Ferr[,j-1] + sqrt(1-rhologFerr^2)*Ferr[,j] }\n  Ferr <- exp(Ferr)\n  \n}else{\n  devlogR <- NA\n}\n\n\n#memory.limit(size=4000)\n\nsource(\"C:/use/ICES/WKMSYref4/ss3_BRP/code/BRP-WithUncertainty_DGA05102015.r\")\nsource(\"C:/use/ICES/WKMSYref4/ss3_BRP/code/BRP-functions_DGA05102015.r\")\n\neqRes <- BRPWithUncertaintyStochR(dirSS3output=dirSS3output,fmult=fmult, srtype=modelname, srparamstype=srparamstype, srparams=srparams, stockname=stockname, PerRecruitPlot=T, plotfilename = plotfilename,valuesfilename = valuesfilename, Fsummary = paste(\"F(\",lmin,\"-\",lmax,\"cm)\",sep=\"\"), Blim = Blim, Bpa = Bpa, devlogR = devlogR, nyrprojection = nyrprojection, lmin=lmin,lmax=lmax,amin=amin, Btrigger=Btrigger,uncertainsel=uncertainsel,nyrbootstrapsel=nyrbootstrapsel, nyraveragesel=nyraveragesel, nyrFbarstquo=nyrFbarstquo, ICES_HCR = ICES_HCR) \n\nY <- apply(eqRes$Yeq,2,median)\n\nMSYInt <- findInterval(0.27,names(Y))\nMSY <- sum(Y[MSYInt:(MSYInt+1)])/2\nMSYrg <- MSY *0.95\n\nmaxY <- which.max(Y)\n\nflowI <- findInterval(MSYrg, vec= sort(Y[1:maxY]))\n\nfuppI <- findInterval(MSYrg, vec= sort(Y[length(fmult):maxY]))\n\nFlow <- sum(as.numeric(names(sort(Y[1:maxY])[flowI:(flowI+1)])))/2\nFupp  <- sum(as.numeric(names(sort(Y[length(fmult):maxY])[fuppI:(fuppI+1)])))/2\nFmsyRg <- c(Flow = Flow, Fupp = Fupp)\n\nsave(eqRes, FmsyRg, file = paste(valuesfilename,\".RData\",sep=\"\"))\nwrite.csv(FmsyRg, file =  paste(valuesfilename,\"Fmsy_RANGE.csv\",sep=\"\"))\n}\n\n\n\n",
    "created" : 1444287315827.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3121341960",
    "id" : "5C8A09F5",
    "lastKnownWriteTime" : 1444888716,
    "path" : "~/ICES/WKMSYref4/ss3_BRP/code/MAIN-BRP_DGA05102015.r",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}