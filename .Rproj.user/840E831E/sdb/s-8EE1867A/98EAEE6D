{
    "contents" : "`BRPWithUncertaintyStochR` <-\nfunction (dirSS3output,fmult,srtype, srparamstype, srparams, stockname, PerRecruitPlot, plotfilename, valuesfilename, Fsummary, Blim, Bpa, nyrprojection, devlogR,lmin,lmax,amin, Btrigger,uncertainsel,nyrbootstrapsel, nyraveragesel, nyrFbarstquo, ICES_HCR) \n{\n\n################################################################################\n# Options for \"srtype\":\n\n# (1) srtype=\"none\": it does only Per Recruit Analysis\n# (2) srtype=\"RK\" (Ricker): R = alpha*SSB*exp(-beta*SSB)  \n# (3) srtype=\"BH\" (Beverton-Holt): R = alpha*SSB*{1/(1+ beta*SSB)}\n# (4) srtype=\"HS\" (Hockey-Stick): R = alpha*SSB*min(1, 1/(beta*SSB)) \n# (5) srtype=\"SP\" (Shepherd): R = alpha*SSB*{1/(1+ (beta*SSB)^delta )}\n\n## if srparamstype = \"albe\", parameters are (alpha,beta) following the parametrisations above\n## if srparamstype = \"hR0\", parameters are steepness h (EXCEPT for srtype=HS, which uses alpha*SPR0 instead of h), equilibrium yield under no fishing R0\n\n## If srtype = RK, BH or HS ==> parameters (alpha,beta) or (h,R0) are given in \n## \"srparams\" = vector of length 2, or matrix of dim = no.replicates x 2 \n\n## If srtype=SP ==> parameters are (alpha,beta,delta) or (h,R0,delta), and \"srparams\" has dim = no.replicates x 3\n\n# Another srtype option is: \n# (6) srtype=\"RJMCMC\" which considers the posterior distribution of RK, BH and HS models \n# with parameters (alpha, beta, srtype) given in \"srparams\" = matrix of dim = no.replicates x 3\n# In 3rd column of \"srparams\": value 1 means RK, value 2 means BH, value 3 means HS\n\npdf(file=plotfilename,height=7,width=10.5)\n\n################################################################################\n### READING OUTPUTS FROM SS3 RUN:\n\noutputSS3 <- SS_output(dir = dirSS3output, model = \"ss3\",repfile = \"Report.sso\", compfile = \"CompReport.sso\", covarfile = \"covar.sso\", ncols = 200, forecast = TRUE, warn = TRUE,covar = FALSE, checkcor = TRUE, cormax = 0.95, cormin = 0.01,printhighcor = 10, printlowcor = 10, verbose = TRUE,printstats = TRUE, hidewarn = FALSE, NoCompOK = FALSE,aalmaxbinrange=0)\n\n\n################# PER RECRUIT EQUILIBRIUM ANALYSIS: ############################\n########## We find Per Recruit proxies such as Fmax, F0.1, F30%\n\nauxi <- SS3nhake_PR_Proj(output=outputSS3,lmin=lmin,lmax=lmax,amin=amin,PR=T, Proj=F, fmult=fmult, Btrigger=Btrigger,uncertainsel=uncertainsel,nyrbootstrapsel=nyrbootstrapsel, nyraveragesel=nyraveragesel, nyrFbarstquo=nyrFbarstquo,nyrprojection=2, ICES_HCR = ICES_HCR)      \n\nSSBPR <- auxi$SSBPR; YPR <- auxi$YPR; CWPR <- auxi$CWPR \nFbarstquo <- auxi$Fbarstquo \nFbar <- Fbarstquo*fmult\n\n## If nrow(YPR) and nrow(SSBPR) < nreplicates, extend the matrices so that they have \"nreplicates\" number of rows:\nif(nrow(YPR) < nreplicates){YPR <- t( matrix(rep(as.vector(YPR),nreplicates), nrow=ncol(YPR)) ) }\nif(nrow(SSBPR) < nreplicates){SSBPR <- t( matrix(rep(as.vector(SSBPR),nreplicates), nrow=ncol(SSBPR)) ) }\n\ndim(YPR)\ndim(SSBPR)\n\nspr0 <- SSBPR[,1]\nlength(spr0)\n\npercentageSPR <- SSBPR/spr0\ndim(percentageSPR)\n\nauxi <- quantile(spr0, probs=c(0.05, 0.5, 0.95))\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"), \"Quantiles 5, 50 and 95% of SPR0:\", append=T)\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"), auxi, append=T)\n\n################################################################################\n## CONSTRUCTING AN ARRAY THAT WILL CONTAIN BRPs AND ASSOCIATED QUANTITIES:\nnamesrow <- c(\"F=0\",\"Fstquo\",\"Fmax\",\"F01\", \"F30%\",\"Fmsy\",\"FmaxEY\",\"F5%Blim\",\"F5%Bpa\")\nnamescol <- c(\"index\", \"Fbar\", \"SPR/SPR0\", \"YPR(kg)\", \"SSBPR(kg)\", \"Yeq(kt)\", \"SSBeq(kt)\", \"Req(millions)\", \"EYeq(kt)\",\"Y/MSY\")\nBioRefP <- array(NA, dim=c(length(namesrow),length(namescol),nreplicates))\ndim(BioRefP)\n\n################################################################################\n# First we need to calculate the indices of the Fs of interest (i.e. of the BRP):\n\n## Indices for F=0:\nBioRefP[1,1,] <- 1\n\n# Indices for Fstquo:\nBioRefP[2,1,] <- apply( matrix(Fbarstquo,ncol=1), 1, function(x){ if(max(Fbar)>x){order(abs(Fbar-x))[1]}else{NA} } )\n\n# Indices for Fmax:\nauxi <- apply(YPR, 1, function(x){ order(max(x)-x)[1] } )\nBioRefP[3,1,auxi<length(Fbar)] <- auxi[auxi<length(Fbar)]  \n\n# Indices for F01:\n# For F01, we need to find the slopes of YPR curve:\nslopes <- apply(YPR, 1, function(x){(x[-1]-x[-length(x)])/(Fbar[-1] - Fbar[-length(x)]) } )\n# Now the indices for F01:\nauxi <- apply(slopes, 2, function(x){ 1+length(x[x>x[1]/10]) } )\nBioRefP[4,1,auxi <= length(Fbar)] <- auxi[auxi<= length(Fbar)] \n\n# Indices for F30%:\nBioRefP[5,1,] <- apply(percentageSPR, 1, function(x){ if(min(x)<0.3){order(abs(x-0.3))[1]}else{NA} } )       \n\n# VALUES of Fbar, %SPR, YPR, SSBPR corresponding to these F BRPs:\nfor(i in 1:7){ \n  BioRefP[i,2,] <- Fbar[BioRefP[i,1,]]\n  BioRefP[i,3,] <- apply( cbind(BioRefP[i,1,], percentageSPR), 1, function(x){ x[1+x[1]] } ) \n  BioRefP[i,4,] <- apply( cbind(BioRefP[i,1,], YPR), 1, function(x){ x[1+x[1]] } )\n  BioRefP[i,5,] <- apply( cbind(BioRefP[i,1,], SSBPR), 1, function(x){ x[1+x[1]] } )\n} \n\n# Fbar corresponding to F30% (for later use in plots): \nF30perc <- BioRefP[namesrow==\"F30%\",2,] \npercSPR30perc <- BioRefP[namesrow==\"F30%\",5,]\n\n\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"), \"\", append=T)\n\nif(srtype==\"none\") { \n  BioRefPmedian <- as.data.frame(apply(BioRefP,c(1,2),median))\n  colnames(BioRefPmedian) <- namescol\n  rownames(BioRefPmedian) <- namesrow\n  write.table(file=paste(valuesfilename,\".r\",sep=\"\"),BioRefPmedian[,-1],append=T)\n}\n\n####################################################################################################\n####################################################################################################\n### PER-RECRUIT PLOTS:\n\nif(PerRecruitPlot){\n\n################################################################################\n## If YPR contains variability, so that we have multiple values of Fmax and F0.1, from which to construct a density function, then we do plots with Fmax and F0.1:\nif(uncertainsel){\n\npar(mfrow=c(2,2), oma=c(2,1.5,1.5,1.5))\n\n# Density plots of Fstquo, Fmax, F0.1, F30% (bandwith to be chosen with care to avoid ugly plots!):\nplot(density(BioRefP[2,2,],bw=0.02),type=\"l\",main=namesrow[2],xlab=Fsummary,ylab=\"\",lwd=2)\nabline(v=median(BioRefP[2,2,]), col=2, lty=2, lwd=2)\n\nfor(i in 3:5){\n  auxi <- BioRefP[i,2,]\n  if(length(auxi[!is.na(auxi)])>1){ \n    plot(density(BioRefP[i,2,],bw=0.005,na.rm=T),type=\"l\",main=namesrow[i],xlab=Fsummary,ylab=\"\",lwd=2)  \n    abline(v=median(BioRefP[i,2,]), col=i+1, lty=2, lwd=2)\n  }\n}\n\nmtext(paste(stockname,\": Per Recruit Equilibrium Analysis\"),  outer=T)\n}\n\n################################################################################\n\n## Plot of YPR and SSBPR versus F, with PR F reference points marked as vertical lines:\n\npar(mfrow=c(1,2), oma=c(2,1.5,1.5,1.5))\n\n# Quantiles of YPR:\nquantYPR <- apply(YPR, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\n# Plot of Quantiles of YPR vs Fbar:\nplot(Fbar,quantYPR[2,],xlab=Fsummary,ylab=\"YPR (kg)\", main=\"Yield Per Recruit\",pch=20,cex=0.5,type=\"l\",ylim=c(0,max(quantYPR)), lwd=2 )\nfor(i in c(1,3)) {lines(Fbar, quantYPR[i,], lty=2)}\n# Adding median F=0, Fstquo, Fmax, F0.1, F30%:\nauxi <- max(quantYPR[2,])*0.7\nfor(i in 1:5){\n abline(v=median(BioRefP[i,2,]), col=i+1, lty=2, lwd=2)\n text(x=median(BioRefP[i,2,]), y=auxi*(i/6), labels=namesrow[i], cex=0.8, font=1)\n} \n\n\n# Same for percentageSPR:\nquantpercentageSPR <- apply(percentageSPR, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\nplot(Fbar,quantpercentageSPR[2,],xlab=Fsummary,ylab=\"percentageSPR\", main=\"% SPR\",pch=20,cex=0.5,type=\"l\",ylim=c(0,max(quantpercentageSPR)), lwd=2 )\nfor(i in c(1,3)) {lines(Fbar, quantpercentageSPR[i,], lty=2)}\n# Adding median F=0, Fstquo, Fmax, F0.1, F30%:\nauxi <- max(quantpercentageSPR[2,])*0.7\nfor(i in 1:5){\n abline(v=median(BioRefP[i,2,]), col=i+1, lty=2, lwd=2)\n text(x=median(BioRefP[i,2,]), y=auxi*(i/6), labels=namesrow[i], cex=0.8)\n} \n\nmtext(paste(stockname,\": Per Recruit Equilibrium Analysis\"),  outer=T)\n\n}\n\n\n####################################################################################################\n####################################################################################################\n\n#######################################################\n#######################################################\n# EQUILIBRIUM ANALYSIS INCLUDING SR RELATIONSHIP:\n#######################################################\n\nif(srtype!=\"none\"){\n\n############################################################################################\n## If parametrisation is in terms of (h,R0), get the corresponding (alpha,beta) parameters:\nif(srparamstype==\"hR0\"){ \n     if(srtype==\"RJMCMC\"){\n        modtype <- srparams[,3]\n        for(i in unique(modtype)){\n          indmod <- c(1:nreplicates)[modtype==i] \n          srparams[indmod,1:2] <- SRalbe(srtype=c(\"RK\",\"BH\",\"HS\")[i],spr0[indmod],srparams[indmod,1:2])  }\n     }else{\n        srparams <- SRalbe(srtype,spr0,srparams)\n     }     \n}\n\nslopeorigin <- srparams[,1]\nalphaspr0 <- slopeorigin*spr0\n\nbeta <- srparams[,2]\n\ndelta <- NA; if(srtype==\"SP\"){ delta <- srparams[,3] }\n\n## Now we need to get h for all of them (including when srtype=HS):\nh <- rep(NA, nreplicates)\nif(srtype==\"RJMCMC\"){ \n        modtype <- srparams[,3]\n        for(i in unique(modtype)){\n          indmod <- c(1:nreplicates)[modtype==i] \n          h[indmod] <- SRh(srtype=c(\"RK\",\"BH\",\"HS\")[i],alphaspr0[indmod])  }\n}else{ h <- SRh(srtype, alphaspr0, delta) }\n\nSSBeq <- array(dim=dim(SSBPR))\n\nif(StochasticR){ \n     auxi <- SS3nhake_PR_Proj(output=outputSS3,lmin=lmin,lmax=lmax,amin=amin,PR=F, Proj=T, fmult=fmult,srtype=srtype,srparams=srparams,slopeorigin=slopeorigin,beta=beta,delta=delta,devlogR=devlogR, Btrigger=Btrigger,uncertainsel=uncertainsel,nyrbootstrapsel=nyrbootstrapsel, nyraveragesel=nyraveragesel, nyrFbarstquo=nyrFbarstquo,nyrprojection=nyrprojection, ICES_HCR = ICES_HCR)\n     \n     SSBeq <- auxi$SSBeq; Yeq <- auxi$Yeq; Req <- auxi$Req; CWeq <- auxi$CWeq\n     \n     colnames(SSBeq) <- colnames(Yeq) <- colnames(Req) <- colnames(CWeq) <- Fbar\n  \n}else{\n\n   ## Recruitment not stochastic around SR curve\n   ## Therefore, a deterministic equilibrium calculation is possible:\n\n   if(srtype==\"RJMCMC\"){ \n        modtype <- srparams[,3]\n        for(i in unique(modtype)){\n          indmod <- c(1:nreplicates)[modtype==i] \n          SSBeq[indmod,] <- SSBeqdet(srtype=c(\"RK\",\"BH\",\"HS\")[i],SSBPR=SSBPR[indmod,],slopeorigin=slopeorigin[indmod],beta=beta[indmod])  }\n   }else{ SSBeq <- SSBeqdet(srtype=srtype, SSBPR=SSBPR, slopeorigin=slopeorigin, beta=beta, delta=delta) }\n\n   Req <- SSBeq/SSBPR\n   Yeq <- Req*YPR\n\n}\n\nR0 <- Req[,1]\n\ndim(Req)\ndim(SSBeq)\ndim(Yeq)\n\n##############################################################################################\n##############################################################################################\n############  PLOT\n\n  ## Plot values of (alphaspr0,R0) used in BRP calculation:\n  par(mfcol=c(2,3), oma=c(2,1.5,1.5,1.5))\n  \n  plot(alphaspr0,R0, pch=20, cex=0.5, main=\"(alphaspr0,R0)\")\n\n  plot(h,R0, pch=20, cex=0.5, main=\"(h,R0)\")\n  \n  auxix <- density(alphaspr0)$x \n  auxiy <- density(alphaspr0)$y \n  plot(auxix[(auxix>min(alphaspr0))&(auxix<max(alphaspr0))], auxiy[(auxix>min(alphaspr0))&(auxix<max(alphaspr0))],type=\"l\",xlab=\"alphaspr0\",ylab=\"\",main=c(\"pdf of alphaspr0\",paste(\"based on\",length(unique(alphaspr0)),\"values\")) )\n\n  auxix <- density(h)$x \n  auxiy <- density(h)$y \n  if(length(unique(h))>2){\n     plot(auxix[(auxix>min(h))&(auxix<max(h))], auxiy[(auxix>min(h))&(auxix<max(h))],type=\"l\",xlab=\"h\",ylab=\"\",main=c(\"pdf of h\",paste(\"based on\",length(unique(h)),\"unique values\")) )\n  }\n  \n  plot(density(R0),xlab=\"R0\",ylab=\"\",main=c(\"pdf of R0\",paste(\"based on\",length(unique(R0)),\"values\")) )\n  \n  mtext(\"Values used in BRP calculation\",  outer=T)\n\n\n##############################################################################################\n##############################################################################################\n\n# Index of Fmsy and corresponding value of Fmsy:\nrowFmsy <- c(1:length(namesrow))[namesrow==\"Fmsy\"]\n# index corresponding to Fmsy: \nauxi <- apply(Yeq, 1, function(x){ if(x[length(x)]<max(x)){order(max(x)-x)[1]}else{NA} } ) \nBioRefP[rowFmsy,1,] <- auxi\n\nYoverMSY <- array(NA, dim=dim(Yeq))\nauxi[!is.na(auxi)] <- apply(Yeq[!is.na(auxi),],1,max)\nYoverMSY[!is.na(auxi),] <- Yeq[!is.na(auxi),]/auxi[!is.na(auxi)]\n\n# Fbar corresponding to Fmsy:\nFmsy <- Fbar[BioRefP[rowFmsy,1,]] \nBioRefP[rowFmsy,2,] <- Fmsy\n\n\n## For each F, calculate average (i.e. expected) equilibrium yield for that F; the average is across the replicates:\n## dga: replaced by median\nEYeq <- apply(Yeq, 2, median) \nlength(EYeq)\n\n# Index of FmaxEY and corresponding value of FmaxEY:\nrowFmaxEY <- c(1:length(namesrow))[namesrow==\"FmaxEY\"]\n# index corresponding to FmaxEY:\nauxi <- order(max(EYeq)-EYeq)[1]\n# ==> it is the same value for all replicates, since EYeq is averaged over replicates:\nif(auxi < length(Fbar)){ BioRefP[rowFmaxEY,1,] <- auxi } \n# Fbar corresponding to FmaxEY:\nFmaxEY <- Fbar[BioRefP[rowFmaxEY,1,1]]\nBioRefP[rowFmaxEY,2,] <- FmaxEY \n\n# Compute %SPR, YPR, SSBPR for these F reference points:\nfor(i in c(rowFmsy,rowFmaxEY)){\n  BioRefP[i,3,] <- apply( cbind(BioRefP[i,1,], percentageSPR), 1, function(x){ x[1+x[1]] } )\n  BioRefP[i,4,] <- apply( cbind(BioRefP[i,1,], YPR), 1, function(x){ x[1+x[1]] } )\n  BioRefP[i,5,] <- apply( cbind(BioRefP[i,1,], SSBPR), 1, function(x){ x[1+x[1]] } )\n}\n\npercSPRmsy <- BioRefP[rowFmsy,5,]\n\n# For Fstquo, Fmax, F01, F30%, Fmsy, FmaxEY, compute Yeq, SSBeq, Req, EYeq, Y/MSY:\n\nunits <- 1000 \n\nfor(i in 1:length(namesrow)){\n    # Equilibrium yield (kt):\n    BioRefP[i,6,] <- apply( cbind(BioRefP[i,1,], Yeq/units), 1, function(x){ x[1+x[1]] } ) \n    # Equilibrium SSB (kt):\n    BioRefP[i,7,] <- apply( cbind(BioRefP[i,1,], SSBeq/units), 1, function(x){ x[1+x[1]] } ) \n    # Equilibrium Recruitment (millions):  \n    BioRefP[i,8,] <- apply( cbind(BioRefP[i,1,], Req/units), 1, function(x){ x[1+x[1]] } )   \n    # Equilibrium average yield (kt):   \n    BioRefP[i,9,] <-  EYeq[BioRefP[i,1,]]/units\n    # Equilibrium Y/MSY:\n    BioRefP[i,10,] <- apply( cbind(BioRefP[i,1,], YoverMSY), 1, function(x){ x[1+x[1]] } )\n} \n   \nY30percoverMSY <- BioRefP[namesrow==\"F30%\",namescol==\"Y/MSY\",] \n\n\ndim(BioRefP)\nnamescol\nnamesrow\n\n#####################################################################################\n########## PLOTS IN RELATION TO MSY:\n\npar(mfrow=c(2,2))\n\nhist(Fmsy, prob=T, main=\"Fmsy (med Fmsy red; FmaxEY gr)\", xlab=\"\",ylab=\"\")\nauxi <- sort(Fmsy[!is.na(Fmsy)])[-(1:length(Fmsy[is.na(Fmsy)]))]\nabline(v=median(auxi),col=2,lwd=2); abline(v=FmaxEY,col=3,lwd=2)\n\nhist(percSPRmsy, prob=T, main=\"%SPR at MSY (median red)\", xlab=\"\", ylab=\"\")\nauxi <- sort(percSPRmsy[!is.na(percSPRmsy)],decreasing=TRUE)[-(1:length(percSPRmsy[is.na(percSPRmsy)]))]\nabline(v=median(auxi),col=2,lwd=2)\n\nplot(Fmsy, type=\"l\", xlab=\"replicate\",main=\"Fmsy\")\n\n##########################################################################################\n#########  VALUES OF F CORRESPONDING TO 5% RISK OF SSB<Blim and 5% RISK OF SSB<Bpa #######\n\n#browser()\n\nif(!is.na(Blim)){\n   PbelowBlim <- apply(SSBeq, 2, function(x){ length(x[x<Blim])/length(x) } )\n   # Index of F5%Blim (F that gives 5% probab of SSB < Blim) and corresponding values of F:\n   auxi <- c(1:length(namesrow))[namesrow==\"F5%Blim\"]\n   # index corresponding to F5%Blim:\n   if(max(PbelowBlim)>0.05){BioRefP[auxi,1,] <- order(abs(PbelowBlim-0.05))[1]}\n   # Fbar corresponding to F5%Blim: \n   BioRefP[auxi,2,] <- Fbar[BioRefP[auxi,1,]]\n   #Compute %SPR, YPR and SSBPR for these F5%Blim:\n   BioRefP[auxi,3,] <- apply( cbind(BioRefP[auxi,1,], percentageSPR), 1, function(x){ x[1+x[1]] } )\n   BioRefP[auxi,4,] <- apply( cbind(BioRefP[auxi,1,], YPR), 1, function(x){ x[1+x[1]] } )\n   BioRefP[auxi,5,] <- apply( cbind(BioRefP[auxi,1,], SSBPR), 1, function(x){ x[1+x[1]] } )\n}\n\nif(!is.na(Bpa)){\n   PbelowBpa <- apply(SSBeq, 2, function(x){ length(x[x<Bpa])/length(x) } )\n   # Index of F5%Bpa (F that gives 5% probab of SSB < Bpa) and corresponding values of F:\n   auxi <- c(1:length(namesrow))[namesrow==\"F5%Bpa\"]\n   # index corresponding to F5%Bpa:\n   if(max(PbelowBpa)>0.05){BioRefP[auxi,1,] <- order(abs(PbelowBpa-0.05))[1]}\n   # Fbar corresponding to F5%Bpa: \n   BioRefP[auxi,2,] <- Fbar[BioRefP[auxi,1,]]\n   #Compute %SPR, YPR and SSBPR for these F5%Blim:\n   BioRefP[auxi,3,] <- apply( cbind(BioRefP[auxi,1,], percentageSPR), 1, function(x){ x[1+x[1]] } )\n   BioRefP[auxi,4,] <- apply( cbind(BioRefP[auxi,1,], YPR), 1, function(x){ x[1+x[1]] } )\n   BioRefP[auxi,5,] <- apply( cbind(BioRefP[auxi,1,], SSBPR), 1, function(x){ x[1+x[1]] } )\n}\n\n#######################################################################################\n#######  CALCULATING AND RECORDING QUANTILES OF THE BRPs\n\nBioRefPmedian <- as.data.frame(apply(BioRefP,c(1,2),median))\ncolnames(BioRefPmedian) <- namescol\nrownames(BioRefPmedian) <- namesrow\n\nauxi <- sort((1:nreplicates)[!is.na(Fmsy)])[-(1:length(Fmsy[is.na(Fmsy)]))] \nif(length(auxi)>0){ BioRefPmedian[namesrow==\"Fmsy\",] <- apply(BioRefP[namesrow==\"Fmsy\",,auxi],1,median) }\n\ncolround2 <- c(2,5,10)\nBioRefPmedian[,colround2] <- round(BioRefPmedian[,colround2]   , 2)\n\nBioRefPmedian[,-1]\n\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"),\"\", append=T)\nwrite.table(file=paste(valuesfilename,\".r\",sep=\"\"),BioRefPmedian[,-1],append=T)\n\ncsvfile <- paste(valuesfilename,\"_Med.csv\",sep=\"\")\nwrite.csv(file=csvfile,BioRefPmedian[,-1])\n\nprobs <- c(0.5, 0.05, 0.95)\n\nfor(i in 1:length(probs)){\n  BioRefPquant <- as.data.frame(apply(BioRefP,c(1,2),function(x){ if(length(x[is.na(x)])==0){quantile(x, prob=probs[i])}else{NA} }  )) \n  colnames(BioRefPquant) <- namescol\n  rownames(BioRefPquant) <- namesrow\n\n  BioRefPquant[,colround2] <- round(BioRefPquant[,colround2]   , 2)\n  BioRefPquant[,-1]\n\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"),\"\", append=T)\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"),paste(\"Percentile =\",probs[i]), append=T)\nwrite(file=paste(valuesfilename,\".r\",sep=\"\"),\"\", append=T)\nwrite.table(file=paste(valuesfilename,\".r\",sep=\"\"),BioRefPquant[,-1],append=T)\n\n}\n\n######################################################################################\n#############  MORE PLOTS: ###########################################################\n\n# Row numbers without NAs:\ntruerows <- c(1:nrow(BioRefPmedian))[!is.na(BioRefPmedian$Fbar)]\n\npar(mfrow=c(2,2), oma=c(2,1.5,1.5,1.5))\n\nquantSSBPR <- apply(SSBPR, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\n\nquantpercentageSPR <- apply(percentageSPR, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\n\nplot(Fbar, quantpercentageSPR[2,], type=\"l\", xlab=Fsummary, ylab=\"%SPR\", main=\"%SPR vs Fbar\",lwd=2)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantpercentageSPR[2,])+(max(quantpercentageSPR[2,])-min(quantpercentageSPR[2,]))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nquantSSBeq <- apply(SSBeq/units, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\n\nplot(Fbar, quantSSBeq[2,], type=\"l\", xlab=Fsummary, ylab=\"SSBeq\", main=\"SSBeq (kt) vs Fbar\",lwd=2)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantSSBeq[2,])+(max(quantSSBeq[2,])-min(quantSSBeq[2,]))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nquantReq <- apply(Req/units, 2, function(x){quantile(x, probs=c(0.05,0.5,0.95))} )\n\nplot(Fbar, quantReq[2,], type=\"l\", xlab=Fsummary, ylab=\"Req\", main=\"Req (millions) vs Fbar\",lwd=2)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantReq[2,])+(max(quantReq[2,])-min(quantReq[2,]))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nquantYeq <- apply(Yeq/units, 2, function(x){quantile(x,probs=c(0.05,0.5,0.95))} )\n# Because \"EYeq\" already represents an average **over all replicates**, there is a single value of \"EYeq\" for each F.\n\nplot(Fbar, quantYeq[2,], xlab=Fsummary, ylab=\"Y_eq (kt)\", type=\"l\", cex.axis=0.7, lwd=2, main=\"Median(bl) & Average(gr) Yield vs Fbar\")\nlines(Fbar, EYeq/units, lwd=2, col=3)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantYeq[2,])+(max(quantYeq[2,])-min(quantYeq[2,]))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1) \n}\n\nmtext(paste(stockname,\": Equilibrium Analysis (Medians over replicates), based on\", srtype, \"SR relationship\"),  outer=T)\n\n\nquantpercentageY <- apply(Yeq/as.vector(units*BioRefP[namesrow==\"Fmsy\",namescol==\"Yeq(kt)\",]), 2, function(x){quantile(x,probs=c(0.05,0.5,0.95),na.rm=T)} )\n\n######################################################################################################\n\npar(mfrow=c(1,2), oma=c(2,1.5,1.5,1.5))\n\nplot(Fbar, EYeq/units, xlab=Fsummary, ylab=\"EY_eq\", type=\"l\", cex.axis=0.7, lwd=2, main=\"Average Equilibrium Yield (kt) vs Fbar\", col=3)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=(min(EYeq)+(max(EYeq)-min(EYeq))*j/length(namesrow))/units, labels=rownames(BioRefPmedian)[j], cex=0.8, font=1) \n}\n\nauxi <- EYeq; auxi <- auxi/max(auxi)\nplot(Fbar, auxi, xlab=Fsummary, ylab=\"%EY_eq\", type=\"l\", cex.axis=0.7, lwd=2, main=\"Percentage Average Eq. Yield (kt) vs Fbar\", col=3, ylim=c(0,1))\nabline(h=0.9, col=3, lty=2, lwd=2)\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n}\nfor(j in truerows){\n  text(x=BioRefPmedian$Fbar[j], y=j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1) \n}\n\n\nmtext(paste(stockname,\": Equilibrium Analysis, based on Average Yield\", srtype, \"SR relationship\"),  outer=T)\n\n###################################################################################################################\n\npar(mfrow=c(2,2), oma=c(2,1.5,1.5,1.5))\n\nplot(Fbar, quantpercentageSPR[2,], type=\"l\", xlab=Fsummary, ylab=\"%SPR\", main=\"%SPR vs Fbar\",lwd=2, ylim=range(quantpercentageSPR))\nfor(i in c(1,3)) {lines(Fbar,quantpercentageSPR[i,],lty=2)}\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantpercentageSPR)+(max(quantpercentageSPR)-min(quantpercentageSPR))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nplot(Fbar, quantSSBeq[2,], type=\"l\", xlab=Fsummary, ylab=\"SSBeq\", main=\"SSBeq (kt) vs Fbar\",lwd=2, ylim=range(quantSSBeq))\nfor(i in c(1,3)) {lines(Fbar,quantSSBeq[i,],lty=2)}\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantSSBeq)+(max(quantSSBeq)-min(quantSSBeq))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nplot(Fbar, quantReq[2,], type=\"l\", xlab=Fsummary, ylab=\"Req\", main=\"Req (millions) vs Fbar\",lwd=2, ylim=range(quantReq))\nfor(i in c(1,3)) {lines(Fbar,quantReq[i,],lty=2)}\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantReq)+(max(quantReq)-min(quantReq))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)}  \n\nplot(Fbar, quantYeq[2,], xlab=Fsummary, ylab=\"Y_eq (kt)\", type=\"l\", cex.axis=0.7, lwd=2, main=\"Quantiles(bl) & Average(gr) Yield vs Fbar\",ylim=c(0,max(quantYeq)))\nlines(Fbar, EYeq/units, lwd=2, col=3)\nfor(i in c(1,3)) { lines(Fbar, quantYeq[i,], lty=2) }\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantYeq)+(max(quantYeq)-min(quantYeq))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)}\n\nmtext(paste(stockname,\": Equilibrium Analysis (5, 50, 95 percentiles over replicates), based on\", srtype, \"SR relationship\"),  outer=T)\n\n##################################################################################\n\npar(mfrow=c(1,1), oma=c(2,1.5,1.5,1.5))\n\nplot(Fbar, quantSSBeq[2,], type=\"l\", xlab=Fsummary, ylab=\"SSBeq\", main=\"SSBeq (kt) vs Fbar\",lwd=2, ylim=range(quantSSBeq))\nfor(i in c(1,3)) {lines(Fbar,quantSSBeq[i,],lty=2)}\nfor(j in truerows){\n  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n  text(x=BioRefPmedian$Fbar[j], y=min(quantSSBeq)+(max(quantSSBeq)-min(quantSSBeq))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\nif(!is.na(Blim)){abline(h=Blim/units,lty=2,col=2,lwd=2)}\nif(!is.na(Bpa)){abline(h=Bpa/units,lty=2,col=4,lwd=2)}\n\nmtext(paste(stockname,\": Equilibrium Analysis (5, 50, 95 percentiles over replicates), based on\", srtype, \"SR relationship\"),  outer=T)\n\nif(!is.na(Blim)){\n   \n   par(mfrow=c(1,1), oma=c(2,1.5,1.5,1.5))\n\n   plot(Fbar, PbelowBlim, type=\"l\", xlab=Fsummary, ylab=\"\", main=\"P(SSB<Blim) (black) and P(SSB<Bpa) (blue) vs Fbar\",lwd=2)\n   if(!is.na(Bpa)){  lines(Fbar, PbelowBpa, lwd=2, col=4)  }\n   abline(h=0.05, col=2, lwd=2)\n\n   for(j in truerows){\n     abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)\n     text(x=BioRefPmedian$Fbar[j], y=min(PbelowBlim)+(max(PbelowBlim)-min(PbelowBlim))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n   }  \n\nmtext(paste(stockname,\": Equilib Analysis (probab is over replicates; F values are medians), based on\", srtype, \"SR\"),  outer=T)\n\n}\n\n\n###########  OTHER PLOTS  #################\n\npar(mfrow=c(1,2), oma=c(2,1.5,1.5,1.5))\n\n#Plot 1. F-YPR_eq, F-SSBPR_eq\nplot(Fbar, quantYPR[2,], xlab=Fsummary, ylab=\"YPR\", type=\"l\", cex.axis=0.7,lwd=2,ylim=c(0,max(quantYPR)))\nfor(i in c(1,3)) {lines(Fbar, quantYPR[i,], lty=2)}\ntitle(\"Yield and SSB per recruit versus Fbar\")   \npar(new=TRUE) \nplot(Fbar, quantpercentageSPR[2,], new=FALSE, axes=F, type=\"l\", ylab=\"\", xlab=\"\", cex.axis=0.7, col=2, lwd=2)\naxis(4, ylim=c(0,max(quantYPR)), cex.axis=0.7)\nfor(i in c(1,3)) {lines(Fbar, quantpercentageSPR[i,], lty=2, col=2)}\nfor(j in truerows){  abline(v=BioRefPmedian$Fbar[j], lty=3, col=j+1, lwd=2)  }\nfor(j in truerows){\n  text(x=BioRefPmedian$Fbar[j], y=(max(quantpercentageSPR)-min(quantpercentageSPR))*j/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)}  \n# How to put ticks and labels in second y axis for SSB?\n\n# Plot 2: Median SR function and replacement lines\n\n## SSB for plot goes from 0 to SSB0:\ns <- seq(0, 1.2*median(spr0*R0), length=2000)\n                           \n## srparams are (alpha, beta)\nif(srtype==\"RK\"){ sr <- apply(srparams, 1, function(x){s*x[1]*exp(-x[2]*s)} )\n}else if(srtype==\"BH\") { sr <- apply(srparams, 1, function(x){s*x[1]/(1+x[2]*s)} ) \n}else if(srtype==\"SP\") { sr <- apply(srparams, 1, function(x){s*x[1]/( 1+ (x[2]*s)^x[3] )} ) \n}else if(srtype==\"HS\") { sr <- apply(srparams, 1, function(x){s*x[1]*pmin( 1, 1/(x[2]*s) ) } )  \n}else if(srtype==\"RJMCMC\") {\n\n  sr <- matrix(nrow=length(s), ncol=nreplicates)\n\n  ### Replicates corresponding to Ricker SR:    \n  indmod <- c(1:nreplicates)[modtype==1] \n  if(length(indmod) > 0){\n    sr[,indmod] <- apply(srparams[indmod,], 1, function(x){s*x[1]*exp(-x[2]*s)} )\n  }\n  \n  ### Replicates corresponding to Beverton-Holt SR:  \n  indmod <- c(1:nreplicates)[modtype==2]\n  if(length(indmod) > 0){\n    sr[,indmod] <- apply(srparams[indmod,], 1, function(x){s*x[1]/(1+x[2]*s)} ) \n  }\n\n  ### Replicates corresponding to Hockey-Stick SR:  \n  indmod <- c(1:nreplicates)[modtype==3]\n  if(length(indmod) > 0){\n    sr[,indmod] <- apply(srparams[indmod,], 1, function(x){s*x[1]*pmin( 1, 1/(x[2]*s) ) } ) \n  }\n}\n\nquantsr <- apply(sr, 1, function(x){quantile(x, prob=c(0.05,0.5,0.95) ) } ) \ndim(sr)\ndim(quantsr)\nplot(s, quantsr[2,], type=\"l\", lwd=2, xlab=\"SSB\", ylab=\"Rec\")\n\nind <- order(BioRefPmedian$Fbar[truerows],decreasing=F)\ntruerows <- truerows[ind]\nauxi <- 0\nfor(j in truerows){auxi <- auxi+1; lines(s, s/BioRefPmedian$\"SSBPR(kg)\"[j], col=auxi, lwd=2, lty=2)  } \nauxi <- 0\nfor(j in truerows){\n  auxi <- auxi + 1\n  text(x=max(s)-(max(s)-min(s))*auxi/length(namesrow), (max(quantsr[2,])-min(quantsr[2,]))*auxi/length(namesrow), labels=rownames(BioRefPmedian)[j], cex=0.8, font=1)  \n}  \n\ntitle(\"Median of SR function and replacement lines\")\n        \nmtext(paste(stockname,\": Equilibrium Analysis Based on\", srtype, \"SR relationship\"),  outer=T)\n\n########################################################################################\n# Now plot F BRPs, next to each other:\ndim(BioRefP)\n\nfor(i in 1:length(truerows)){\n  auxi <- BioRefP[truerows[i],namescol==\"Fbar\",]\n  BioRefP[truerows[i],namescol==\"Fbar\",is.na(auxi)] <- max(Fbar)\n}\n\nquantFbar <- apply(BioRefP[truerows,namescol==\"Fbar\",], 1, function(x){ quantile(x, probs=c(0.05,0.5,0.95)) })\n\npar(mfrow=c(1,1), oma=c(2,1.5,1.5,1.5))\n\nylimupper <- 1.2*max(quantFbar) \n\nplot(quantFbar[2,],xlab=\"\",ylab=Fsummary, ylim=c(0,ylimupper), main=Fsummary,type=\"p\",pch=20,cex=1, xaxt=\"n\")\nfor (j in 1:ncol(quantFbar)){ abline(h=quantFbar[2,j], lty=2, col=3) } \nfor (j in 1:ncol(quantFbar)){\n  points(j, quantFbar[2,j],pch=20,cex=1.5)\n  arrows(j,quantFbar[1,j],j,quantFbar[3,j],code=3,angle=90,length=0.03,lwd=1.5) \n} \nauxi <- 0\nfor(j in truerows){\n  auxi <- auxi + 1\n  text(x=auxi, y=quantFbar[3,auxi]+(ylimupper-max(quantFbar))/3, labels=rownames(BioRefPmedian)[j], cex=0.8, font=2)  \n}  \n\nmtext(paste(stockname,\": Equilibrium Analysis Based on\", srtype, \"SR relationship; 5, 50, 95 percentiles\"),  outer=T)\n\n}\n\ndev.off()\n\nreturn(list(Yeq = Yeq, CWeq = CWeq, BioRefP = BioRefP, Req, SSBeq))\n\n}\n",
    "created" : 1444302388815.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2532209151",
    "id" : "98EAEE6D",
    "lastKnownWriteTime" : 1444311707,
    "path" : "~/ICES/WKMSYref4/ss3_BRP/code/BRP-WithUncertainty_DGA05102015.r",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}